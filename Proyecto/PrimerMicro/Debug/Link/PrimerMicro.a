;/*
; * PrimerMicro.c
; *
; * Created: 04/05/2017 04:59:22 p. m.
; * Author: adomingu
; * Made with love by: Agui, Pau, Isra.
; */
;
;// Librerias Display Nokia
;#include <mega328p.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x01
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x0E
;PCODE: $00000004 VOL: 0
	.EQU __sm_adc_noise_red=0x02
;PCODE: $00000005 VOL: 0
	.EQU __sm_powerdown=0x04
;PCODE: $00000006 VOL: 0
	.EQU __sm_powersave=0x06
;PCODE: $00000007 VOL: 0
	.EQU __sm_standby=0x0C
;PCODE: $00000008 VOL: 0
	.EQU __sm_ext_standby=0x0E
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=smcr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <io.h>
;#include <delay.h>
;// Graphic Display functions
;#include <glcd.h>
;
;// Font used for displaying text
;// on the graphic display
;#include <font5x7.h>
;
;// Librerias proyecto
;#include <io.h>
;#include <delay.h>
;#include <display.h>

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;	TableSetup -> Y+1
;	i -> R16
;PCODE: $00000015 VOL: 0
; 0000 0017     SBI __lcd_port-1,__lcd_EN
    SBI __lcd_port-1,__lcd_EN
;PCODE: $00000016 VOL: 0
    SBI __lcd_port-1,__lcd_RS
;PCODE: $00000017 VOL: 0
    SBI __lcd_port-1,__lcd_D4
;PCODE: $00000018 VOL: 0
    SBI __lcd_port-1,__lcd_D5
;PCODE: $00000019 VOL: 0
    SBI __lcd_port-1,__lcd_D6
;PCODE: $0000001A VOL: 0
    SBI __lcd_port-1,__lcd_D7
;PCODE: $0000001B VOL: 0
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
    SBI __lcd_port,__lcd_EN  // EN=1;
;PCODE: $00000044 VOL: 0
    CBI __lcd_port,__lcd_EN // EN=0;
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
;PCODE: $0000004B VOL: 0
;	dato -> Y+0
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
	SBI __lcd_port,__lcd_D7
;PCODE: $00000050 VOL: 0
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;PCODE: $00000053 VOL: 0
	CBI __lcd_port,__lcd_D7
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
	SBI __lcd_port,__lcd_D6
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
	CBI __lcd_port,__lcd_D6
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
	SBI __lcd_port,__lcd_D5
;PCODE: $00000064 VOL: 0
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
	CBI __lcd_port,__lcd_D5
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
;PCODE: $0000006C VOL: 0
;PCODE: $0000006D VOL: 0
	SBI __lcd_port,__lcd_D4
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;PCODE: $00000070 VOL: 0
;PCODE: $00000071 VOL: 0
	CBI __lcd_port,__lcd_D4
;PCODE: $00000072 VOL: 0
;PCODE: $00000073 VOL: 0
;PCODE: $00000074 VOL: 0
;PCODE: $00000075 VOL: 0
;PCODE: $00000076 VOL: 0
;PCODE: $00000077 VOL: 0
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;PCODE: $0000007A VOL: 0
;	Comando -> Y+1
;	tempComando -> R16
;PCODE: $0000007B VOL: 0
	CBI __lcd_port,__lcd_RS
;PCODE: $0000007C VOL: 0
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;PCODE: $0000008E VOL: 0
;PCODE: $0000008F VOL: 0
;PCODE: $00000090 VOL: 0
;PCODE: $00000091 VOL: 0
;PCODE: $00000092 VOL: 0
;PCODE: $00000093 VOL: 0
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;PCODE: $00000098 VOL: 0
;	dato -> Y+1
;	tempdato -> R16
;PCODE: $00000099 VOL: 0
	SBI __lcd_port,__lcd_RS
;PCODE: $0000009A VOL: 0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;PCODE: $000000A1 VOL: 0
;PCODE: $000000A2 VOL: 0
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;	i -> R16
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
;PCODE: $000000C1 VOL: 0
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
;PCODE: $000000D4 VOL: 0
;	tiempo -> Y+1
;	i -> R16
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
;	Mensaje -> Y+1
;	i -> R16
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
;PCODE: $00000115 VOL: 0
;	x -> Y+1
;	y -> Y+0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
;PCODE: $00000147 VOL: 0
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
;PCODE: $0000015E VOL: 0
;	NoCaracter -> Y+3
;	datos -> Y+1
;	i -> R16
;PCODE: $0000015F VOL: 0
;PCODE: $00000160 VOL: 0
;PCODE: $00000161 VOL: 0
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;#include <stdio.h>
;#include <stdint.h>
;#include "FuncionesSerial.h"
;PCODE: $0000017D VOL: 0
;PCODE: $0000017E VOL: 0
;PCODE: $0000017F VOL: 0
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;	caracter -> Y+0
;PCODE: $0000018D VOL: 0
;PCODE: $0000018E VOL: 0
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
;PCODE: $0000019A VOL: 0
;	*cadena -> Y+0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
;PCODE: $000001A0 VOL: 0
;PCODE: $000001A1 VOL: 0
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
;PCODE: $000001AA VOL: 0
;
;// -- Imagen 1 -- //
;flash unsigned char imagen1 [] = {
;0x54, 0x00, 0x30, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x3C, 0x3C, 0xEC, 0xFC, 0xB0, 0xF0, 0xB0, 0x30, 0x30, 0xB0, 0xB0, 0xB0, 0x30, 0xB0, 0xB0,
;0xEC, 0xEC, 0x3C, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x80, 0x80, 0xFF, 0xFF, 0xBA, 0xB8, 0x76, 0xFF, 0xFC, 0xFA, 0xFE, 0xFF, 0xFB,
;0xFF, 0xFF, 0xFF, 0xDB, 0xFE, 0xFD, 0xFF, 0xFF, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x9C, 0x9E, 0xFF, 0xFF, 0x3F, 0xBF, 0xBE, 0xFC, 0xEC, 0xEC, 0xEC, 0xEC, 0xEE,
;0xF8, 0xB8, 0xF8, 0xF8, 0xE0, 0xE0, 0xE0, 0xE0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xFF, 0x1F, 0xFD, 0xFA, 0xFF, 0xFF, 0xFD, 0xFF, 0xFF,
;0xFF, 0xDF, 0xDF, 0xDF, 0xFF, 0xE7, 0xFF, 0xFD, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x60, 0x60,
;0x60, 0x60, 0x98, 0x38, 0x98, 0x5E, 0xE6, 0xF7, 0x79, 0xFD, 0xFA, 0xF6, 0xF7, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xFF, 0xFE, 0xFF, 0xFD, 0xFF, 0xFE, 0xFE,
;0xF8, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0xFF, 0xDF, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x5F, 0x5F, 0x97, 0x49, 0xB9,
;0xA9, 0xAD, 0xAD, 0xEC, 0xF6, 0xD3, 0x93, 0xF3, 0xFD, 0xFD, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x3F, 0x0F, 0x0F,
;0x0F, 0x0F, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x3F, 0xFF, 0xFE, 0xFF,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xC0, 0xFE, 0xFE,
;0xF9, 0xFD, 0xBE, 0x7C, 0xFE, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x7F, 0x3F, 0x3F, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x03,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x07,
;0x1F, 0x1F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F,
;0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x79, 0x79, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x1F,
;0x1F, 0x1F, 0x1E, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;};
;
;flash unsigned char imagen11 [] = {
;0x54, 0x00, 0x30, 0x00,
;0x00, 0x00, 0x00, 0x80, 0x80, 0x60, 0x60, 0x60, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
;0x60, 0x60, 0x80, 0x00, 0x00, 0xE0, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0,
;0x00, 0x00, 0x00, 0x00, 0xE0, 0x60, 0x60, 0x60, 0x60, 0x60, 0x00, 0x00, 0xE0, 0x80, 0x80, 0x00,
;0x00, 0x00, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0x60, 0x60, 0x60, 0x60, 0x00, 0x00, 0x80,
;0x80, 0x60, 0x60, 0x60, 0x80, 0x00, 0x00, 0x60, 0x60, 0x60, 0xE0, 0xE0, 0x60, 0x60, 0x60, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x7F, 0x80, 0x8C, 0x8C, 0xFC, 0xFC, 0x00, 0xE0,
;0xE0, 0x1C, 0x1C, 0x13, 0x10, 0x10, 0x1F, 0xE0, 0xE0, 0xFF, 0xFF, 0x00, 0x7F, 0x7F, 0x80, 0x7F,
;0x7F, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x8C, 0x8C, 0x8C, 0x80, 0x80, 0x00, 0x00,
;0xFF, 0x03, 0x03, 0x0C, 0x70, 0x70, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x8C, 0x8C, 0x8C,
;0x80, 0x00, 0x00, 0x63, 0x63, 0x8C, 0x8C, 0x8C, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01,
;0x01, 0x01, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00,
;0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,
;0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01,
;0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0x30, 0x30,
;0x30, 0x30, 0x30, 0xC0, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x30, 0x30, 0xC0, 0x00, 0x00, 0x00, 0x00,
;0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0xFF, 0xFF, 0x06, 0x06, 0x06, 0x06, 0x06, 0x01, 0xF0, 0xF0, 0x0E, 0x0E, 0x09, 0x08, 0x08, 0x0F,
;0xF0, 0xF0, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;};
;
;flash unsigned char imagen2 [] = {
;0x54, 0x00, 0x30, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x80, 0x80, 0x60, 0x60, 0xF8, 0xF8, 0xE0, 0xE0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x80, 0x80, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x18, 0x98,
;0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xFF, 0xFF, 0xE0, 0xF0, 0x9F, 0x9F, 0xFF, 0xFF, 0xFF, 0xFF,
;0xF8, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0,
;0xE0, 0xE0, 0xE0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x1F, 0x1F, 0x1B, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F,
;0x6F, 0x7F, 0x7B, 0x7F, 0x6F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x3F, 0xFF, 0xFC,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0x7F, 0x6F, 0x7F, 0x7B, 0x7F, 0x6F, 0x7F, 0x1F,
;0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1B, 0x1F, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x07, 0x07,
;0xF8, 0xF8, 0xFF, 0xBF, 0xFF, 0xFF, 0x0F, 0x0F, 0x03, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0xC0, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0x0F, 0x0F, 0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x3F, 0x3F, 0x0F, 0x0F, 0x0F, 0x0F,
;0x0F, 0x0F, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;};
;
;flash unsigned char imagen3 [] = {
;0x54, 0x00, 0x30, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
;0x04, 0x04, 0x84, 0x84, 0xE4, 0xE4, 0xFC, 0xFC, 0xE4, 0xE4, 0x84, 0x84, 0x04, 0x04, 0x04, 0x04,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x80, 0x80, 0xE0, 0xE0, 0xFC, 0xF0, 0xF0, 0xF0, 0xFC, 0xF0, 0xE0, 0xE0, 0xF0, 0x98, 0x98,
;0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xFF, 0xE1, 0xC1, 0xC0, 0x7F, 0x7F, 0xC0, 0xC1, 0xE1, 0xFF,
;0xF8, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xE0, 0xE0, 0xE0, 0xF0, 0xFC, 0xF0, 0xF0, 0xFC,
;0xE0, 0xE0, 0xE0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F,
;0x6F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xE7, 0x80, 0x00, 0x00,
;0x80, 0xE7, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x1F,
;0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x07, 0x07,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x0F, 0x03, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0xC0, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0x0F, 0x0F, 0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x3F, 0x3F, 0x0F, 0x0F, 0x0F, 0x0F,
;0x0F, 0x0F, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;};
;
;flash unsigned char imagen4 [] = {
;0x54, 0x00, 0x30, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0xE0, 0xE0, 0xE0, 0xE0, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x80,
;0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0,
;0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0,
;0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x7E, 0x7E, 0x7E, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x01,
;0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8,
;0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x01, 0x01,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
;0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0xF8, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x06, 0x06, 0x07, 0x07, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x0F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7C, 0x7C, 0x7C, 0x7C, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
;0x00, 0x00, 0x00, 0xFC, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0xF0, 0xF0, 0xF0, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFF, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0x00, 0x00,
;0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x7E, 0xFE, 0xFE, 0xFE, 0xFE, 0x80, 0x80, 0x80, 0x80, 0xFF, 0xFF, 0xFF,
;0xFF, 0x7F, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,
;0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x7F, 0xFF,
;0xFF, 0xFF, 0x80, 0x80, 0x80, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x7F, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x07, 0x07,
;0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x07, 0x07, 0x07, 0x07, 0x07,
;0x07, 0x07, 0x07, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x01, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x01, 0x01, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;};
;
;flash unsigned char imagen5 [] = {
;0x54, 0x00, 0x30, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCE, 0xCE, 0x01, 0x01, 0x01, 0x01, 0x01,
;0x31, 0x31, 0x31, 0x31, 0x31, 0xB2, 0xB2, 0xB2, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x4E,
;0x4E, 0x4E, 0x43, 0x43, 0x4C, 0x4C, 0x4C, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
;0x02, 0x02, 0x02, 0x70, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0xFF, 0xFF, 0x00,
;0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31,
;0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x06,
;0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x01, 0x01, 0x01, 0x00, 0x00, 0x06, 0x06,
;0x06, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x06, 0x06, 0x06,
;0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x07, 0x06, 0x06, 0x06, 0x06, 0x06,
;0x06, 0x06, 0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x80, 0x80, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x80, 0x80, 0x80,
;0x00, 0x00, 0x60, 0x60, 0x60, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
;0x80, 0x60, 0x60, 0x60, 0x00, 0x00, 0xE0, 0xE0, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60,
;0x60, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60,
;0x60, 0xE0, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x41, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x41, 0x41, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x70, 0x70, 0x70, 0x80, 0x80,
;0x70, 0x70, 0x70, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x8C, 0x8C, 0x8C, 0x8C,
;0x8C, 0x8C, 0x8C, 0x8C, 0x8C, 0x8C, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x0C, 0x0C,
;0x0C, 0x0C, 0x0C, 0x3C, 0x3C, 0xCF, 0xCF, 0xCF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01,
;0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
;0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
;0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;};
;
;// -- Inicilizacion Funcion ADC -- //
;// ADC Voltage Reference: AVCC pin
;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (0<<ADLAR))
;
;// Read the AD conversion result
;// Read Voltage=read_adc*(Vref/1024.0)
;unsigned int read_adc(unsigned char adc_input)
; 0000 00FC {
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
; 0000 00FD     ADMUX=adc_input | ADC_VREF_TYPE;
;PCODE: $000001AD VOL: 0
;	adc_input -> Y+0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
;PCODE: $000001B0 VOL: 0
; 0000 00FE     // Delay needed for the stabilization of the ADC input voltage
; 0000 00FF     delay_us(10);
;PCODE: $000001B1 VOL: 0
; 0000 0100     // Start the AD conversion
; 0000 0101     ADCSRA|=(1<<ADSC);
;PCODE: $000001B2 VOL: 0
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
; 0000 0102     // Wait for the AD conversion to complete
; 0000 0103     while ((ADCSRA & (1<<ADIF))==0);
;PCODE: $000001B5 VOL: 0
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
; 0000 0104     ADCSRA|=(1<<ADIF);
;PCODE: $000001BB VOL: 0
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
; 0000 0105     return ADCW;
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
; 0000 0106 }
;PCODE: $000001C1 VOL: 0
;
;// -- Variables adicionales -- //
;unsigned int voltDigitalX;
;unsigned int voltDigitalY;
;int dis1 = 0, dis2 = 0, dis3 = 0, dis4 = 0, i, juego1 = 0, play = 0, vidas = 4;

	.DSEG
;unsigned char dato;
;
;void main(void)
; 0000 010F {

	.CSEG
;PCODE: $000001C2 VOL: 0
; 0000 0110     // -- Configuracion Display LCD Nokia -- //
; 0000 0111     // Declare your local variables here
; 0000 0112     // Variable used to store graphic display
; 0000 0113     // controller initialization data
; 0000 0114     GLCDINIT_t glcd_init_data;
; 0000 0115 
; 0000 0116     // Specify the current font for displaying text
; 0000 0117     glcd_init_data.font=font5x7;
;PCODE: $000001C3 VOL: 0
;	glcd_init_data -> Y+0
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 0118     // No function is used for reading
; 0000 0119     // image data from external memory
; 0000 011A     glcd_init_data.readxmem=NULL;
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
; 0000 011B     // No function is used for writing
; 0000 011C     // image data to external memory
; 0000 011D     glcd_init_data.writexmem=NULL;
;PCODE: $000001C8 VOL: 0
;PCODE: $000001C9 VOL: 0
; 0000 011E     // Set the LCD temperature coefficient
; 0000 011F     glcd_init_data.temp_coef=PCD8544_DEFAULT_TEMP_COEF;
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
; 0000 0120     // Set the LCD bias
; 0000 0121     glcd_init_data.bias=PCD8544_DEFAULT_BIAS;
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
; 0000 0122     // Set the LCD contrast control voltage VLCD
; 0000 0123     glcd_init_data.vlcd=PCD8544_DEFAULT_VLCD;
;PCODE: $000001D2 VOL: 0
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
;PCODE: $000001D5 VOL: 0
; 0000 0124 
; 0000 0125     glcd_init(&glcd_init_data);
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
; 0000 0126     glcd_putimagef(0,0, imagen11, GLCD_PUTCOPY);
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
; 0000 0127     delay_ms(1000);
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
; 0000 0128     glcd_putimagef(0,0, imagen1, GLCD_PUTCOPY);
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
;PCODE: $000001E4 VOL: 0
;PCODE: $000001E5 VOL: 0
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
; 0000 0129     delay_ms(5000);
;PCODE: $000001EA VOL: 0
;PCODE: $000001EB VOL: 0
; 0000 012A 
; 0000 012B     // -- Ajustes de ADC -- //
; 0000 012C     // ADC initialization
; 0000 012D     // ADC Clock frequency: 125.000 kHz
; 0000 012E     // ADC Voltage Reference: AVCC pin
; 0000 012F     // ADC Auto Trigger Source: ADC Stopped
; 0000 0130     // Digital input buffers on ADC0: Off, ADC1: Off, ADC2: On, ADC3: On
; 0000 0131     // ADC4: On, ADC5: On
; 0000 0132     DIDR0=(0<<ADC5D) | (0<<ADC4D) | (0<<ADC3D) | (0<<ADC2D) | (1<<ADC1D) | (1<<ADC0D);
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
; 0000 0133     ADMUX=ADC_VREF_TYPE;
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
; 0000 0134     ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
; 0000 0135     ADCSRB=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
; 0000 0136 
; 0000 0137      // USART initialization
; 0000 0138     // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0139     // USART Receiver: On
; 0000 013A     // USART Transmitter: On
; 0000 013B     // USART0 Mode: Asynchronous
; 0000 013C     // USART Baud Rate: 56000 (Double Speed Mode)
; 0000 013D     UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (1<<U2X0) | (0<<MPCM0);
;PCODE: $000001F4 VOL: 0
;PCODE: $000001F5 VOL: 0
; 0000 013E     UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
;PCODE: $000001F6 VOL: 0
;PCODE: $000001F7 VOL: 0
; 0000 013F     UCSR0C=(0<<UMSEL01) | (0<<UMSEL00) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
;PCODE: $000001F8 VOL: 0
;PCODE: $000001F9 VOL: 0
; 0000 0140     UBRR0H=0x00;
;PCODE: $000001FA VOL: 0
;PCODE: $000001FB VOL: 0
; 0000 0141     UBRR0L=0x11;
;PCODE: $000001FC VOL: 0
;PCODE: $000001FD VOL: 0
; 0000 0142 
; 0000 0143     // Coonfiguracion CTC 8MHz
; 0000 0144     CLKPR=0X80;
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
; 0000 0145     CLKPR=0;
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
; 0000 0146 
; 0000 0147     // -- Definicion de Inputs digitales -- //
; 0000 0148     PORTC.5 = 1;
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
; 0000 0149     PORTC.4 = 1;
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
; 0000 014A     PORTC.3 = 1;
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
; 0000 014B     PORTC.2 = 1;
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
; 0000 014C 
; 0000 014D     // -- Definicion de Outputs  -- //
; 0000 014E     DDRD.7 = 1;
;PCODE: $0000020A VOL: 0
;PCODE: $0000020B VOL: 0
; 0000 014F     DDRD.6 = 1;
;PCODE: $0000020C VOL: 0
;PCODE: $0000020D VOL: 0
; 0000 0150     DDRB.2 = 1;
;PCODE: $0000020E VOL: 0
;PCODE: $0000020F VOL: 0
; 0000 0151     DDRB.0 = 1;
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
; 0000 0152     DDRD.5 = 1;
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
; 0000 0153 
; 0000 0154     while (1)
;PCODE: $00000214 VOL: 0
; 0000 0155     {
; 0000 0156         // -- Operacion de LCD Nokia -- //
; 0000 0157         if(juego1 == 0){
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
;PCODE: $00000217 VOL: 0
; 0000 0158             glcd_putimagef(0,0, imagen11, GLCD_PUTCOPY);
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
;PCODE: $0000021E VOL: 0
;PCODE: $0000021F VOL: 0
; 0000 0159         }
; 0000 015A         // -- lectrua eje x del joystick -- //
; 0000 015B         voltDigitalX = read_adc(0);
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
; 0000 015C 
; 0000 015D 
; 0000 015E         // -- Lectrua eje y del joystick -- //
; 0000 015F         voltDigitalY = read_adc(1);
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
; 0000 0160 
; 0000 0161         // -- Movimiento por joystick -- //
; 0000 0162         if (voltDigitalX<300){
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
; 0000 0163             UART_write_txt("I");
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
; 0000 0164             UART_write_txt("\n\r");
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
;PCODE: $0000022F VOL: 0
; 0000 0165         }
; 0000 0166         else if(voltDigitalX>700){
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
; 0000 0167             UART_write_txt("D");
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
; 0000 0168             UART_write_txt("\n\r");
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
; 0000 0169         }
; 0000 016A 
; 0000 016B         if (voltDigitalY<300){
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
;PCODE: $0000023F VOL: 0
; 0000 016C             UART_write_txt("a");
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
; 0000 016D             UART_write_txt("\n\r");
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
;PCODE: $00000245 VOL: 0
; 0000 016E         }
; 0000 016F         else if(voltDigitalY>700){
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
; 0000 0170             UART_write_txt("A");
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
; 0000 0171             UART_write_txt("\n\r");
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
;PCODE: $00000250 VOL: 0
; 0000 0172         }
; 0000 0173 
; 0000 0174         // -- Lectura Serial -- //
; 0000 0175         if ((UCSR0A&0x80)!=0) //Instruccion que nos dice si hay un caracter listo
;PCODE: $00000251 VOL: 0
;PCODE: $00000252 VOL: 0
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
; 0000 0176                               // para leerse (bandera ?receive complete?)
; 0000 0177         {
; 0000 0178             dato=UART_read();       //Lee caracter del Puerto serie
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
; 0000 0179                                   // Codigo para procesar el caracter recibido
; 0000 017A             if((dato >= '1') && (dato <= '4')){
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
;PCODE: $00000261 VOL: 0
; 0000 017B                 switch(dato){
;PCODE: $00000262 VOL: 0
;PCODE: $00000263 VOL: 0
; 0000 017C                     case '1':
;PCODE: $00000264 VOL: 0
;PCODE: $00000265 VOL: 0
; 0000 017D                         if (dis1 == 0){
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
; 0000 017E                             UART_write_txt("LED1 encendido\n\r");
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
;PCODE: $0000026B VOL: 0
; 0000 017F                             PORTB.0 = 1;
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
; 0000 0180                             dis1 = 1;
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
; 0000 0181                         }
; 0000 0182                         else{
;PCODE: $00000270 VOL: 0
;PCODE: $00000271 VOL: 0
; 0000 0183                             UART_write_txt("LED1 Apagado\n\r");
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
;PCODE: $00000274 VOL: 0
; 0000 0184                             dis1 = 0;
;PCODE: $00000275 VOL: 0
;PCODE: $00000276 VOL: 0
; 0000 0185                             PORTB.0 = 0;
;PCODE: $00000277 VOL: 0
;PCODE: $00000278 VOL: 0
; 0000 0186                         }
;PCODE: $00000279 VOL: 0
; 0000 0187                         printf("\n\r");
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
; 0000 0188                         break;
;PCODE: $00000281 VOL: 0
; 0000 0189                     case '2':
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
;PCODE: $00000284 VOL: 0
; 0000 018A                         if (dis2 == 0){
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
;PCODE: $00000287 VOL: 0
; 0000 018B                             UART_write_txt("LED2 encendido\n\r");
;PCODE: $00000288 VOL: 0
;PCODE: $00000289 VOL: 0
;PCODE: $0000028A VOL: 0
; 0000 018C                             PORTB.2 = 1;
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
; 0000 018D                             dis2 = 1;
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
; 0000 018E                         }
; 0000 018F                         else{
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
; 0000 0190                             UART_write_txt("LED2 apagado\n\r");
;PCODE: $00000291 VOL: 0
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
; 0000 0191                             dis2 = 0;
;PCODE: $00000294 VOL: 0
;PCODE: $00000295 VOL: 0
; 0000 0192                             PORTB.2 = 0;
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
; 0000 0193                         }
;PCODE: $00000298 VOL: 0
; 0000 0194                         printf("\n\r");
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
; 0000 0195                         break;
;PCODE: $000002A0 VOL: 0
; 0000 0196                     case '3':
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
;PCODE: $000002A3 VOL: 0
; 0000 0197                         if (dis3 == 0){
;PCODE: $000002A4 VOL: 0
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
; 0000 0198                             UART_write_txt("LED3 encendido\n\r");
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
; 0000 0199                             PORTD.6 = 1;
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
; 0000 019A                             dis3 = 1;
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
; 0000 019B                         }
; 0000 019C                         else{
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
; 0000 019D                             UART_write_txt("LED3 apagado\n\r");
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
; 0000 019E                             dis3 = 0;
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
; 0000 019F                             PORTD.6 = 0;
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
; 0000 01A0                         }
;PCODE: $000002B7 VOL: 0
; 0000 01A1                         printf("\n\r");
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
; 0000 01A2                         break;
;PCODE: $000002BF VOL: 0
; 0000 01A3                     case '4':
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
;PCODE: $000002C2 VOL: 0
; 0000 01A4                         if (dis4 == 0){
;PCODE: $000002C3 VOL: 0
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
; 0000 01A5                             UART_write_txt("LED4 encendido\n\r");
;PCODE: $000002C6 VOL: 0
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
; 0000 01A6                             PORTD.7 = 1;
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
; 0000 01A7                             dis4 = 1;
;PCODE: $000002CB VOL: 0
;PCODE: $000002CC VOL: 0
; 0000 01A8                         }
; 0000 01A9                         else{
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
; 0000 01AA                             UART_write_txt("LED4 apagado\n\r");
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
; 0000 01AB                             dis4 = 0;
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
; 0000 01AC                             PORTD.7 = 0;
;PCODE: $000002D4 VOL: 0
;PCODE: $000002D5 VOL: 0
; 0000 01AD                         }
;PCODE: $000002D6 VOL: 0
; 0000 01AE                         printf("\n\r");
;PCODE: $000002D7 VOL: 0
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
;PCODE: $000002DD VOL: 0
; 0000 01AF                         break;
;PCODE: $000002DE VOL: 0
; 0000 01B0                 }
;PCODE: $000002DF VOL: 0
; 0000 01B1             }
; 0000 01B2             else if(dato == 'O'){
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
; 0000 01B3                 juego1 = 0;
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
; 0000 01B4                 vidas = 4;
;PCODE: $000002E7 VOL: 0
;PCODE: $000002E8 VOL: 0
; 0000 01B5                 PORTB.0 = 0;
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
; 0000 01B6                 PORTB.2 = 0;
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
; 0000 01B7                 PORTD.6 = 0;
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
; 0000 01B8                 PORTD.7 = 0;
;PCODE: $000002EF VOL: 0
;PCODE: $000002F0 VOL: 0
; 0000 01B9                 printf("\n\r");
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
; 0000 01BA                 for (i = 0; i < 3; i++)
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
;PCODE: $000002FA VOL: 0
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
; 0000 01BB                 {
; 0000 01BC                     glcd_putimagef(0,0, imagen5, GLCD_PUTCOPY);
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
; 0000 01BD                     delay_ms(5000);
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
; 0000 01BE                     glcd_clear();
;PCODE: $0000030D VOL: 0
; 0000 01BF                     delay_ms(5000);
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
; 0000 01C0                 }
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
;PCODE: $00000316 VOL: 0
; 0000 01C1             }
; 0000 01C2             if (dato == 'M'){
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
; 0000 01C3                 PORTD.5 = 1;
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
; 0000 01C4                 delay_ms(5000);
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
; 0000 01C5                 PORTD.5 = 0;
;PCODE: $00000320 VOL: 0
;PCODE: $00000321 VOL: 0
; 0000 01C6                 vidas--;
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
; 0000 01C7             }
; 0000 01C8 
; 0000 01C9             else{
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
; 0000 01CA                 printf("\n\r");
;PCODE: $00000328 VOL: 0
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
; 0000 01CB             }
;PCODE: $0000032F VOL: 0
; 0000 01CC         }
; 0000 01CD         if(juego1 == 1){
;PCODE: $00000330 VOL: 0
;PCODE: $00000331 VOL: 0
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
; 0000 01CE             if (play == 1 && vidas == 4){
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
;PCODE: $0000033C VOL: 0
;PCODE: $0000033D VOL: 0
; 0000 01CF                 glcd_putimagef(0,0, imagen4, GLCD_PUTCOPY);
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
; 0000 01D0                 PORTB.0 = 1;
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
; 0000 01D1                 delay_ms(3000);
;PCODE: $00000348 VOL: 0
;PCODE: $00000349 VOL: 0
; 0000 01D2                 PORTB.2 = 1;
;PCODE: $0000034A VOL: 0
;PCODE: $0000034B VOL: 0
; 0000 01D3                 delay_ms(3000);
;PCODE: $0000034C VOL: 0
;PCODE: $0000034D VOL: 0
; 0000 01D4                 PORTD.6 = 1;
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
; 0000 01D5                 delay_ms(3000);
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
; 0000 01D6                 PORTD.7 = 1;
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
; 0000 01D7                 delay_ms(3000);
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
; 0000 01D8                 play = 0;
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
; 0000 01D9             }
; 0000 01DA             glcd_putimagef(0,0, imagen2, GLCD_PUTCOPY);
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
; 0000 01DB             // Sin animacion
; 0000 01DC             //delay_ms(3000);
; 0000 01DD             //glcd_putimagef(0,0, imagen3, GLCD_PUTCOPY);
; 0000 01DE             //delay_ms(3000);
; 0000 01DF             switch (vidas){
;PCODE: $00000361 VOL: 0
; 0000 01E0             case 3:
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
; 0000 01E1                 PORTD.7 = 0;
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
; 0000 01E2                 break;
;PCODE: $00000366 VOL: 0
; 0000 01E3             case 2:
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
; 0000 01E4                 PORTD.6 = 0;
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
; 0000 01E5                 break;
;PCODE: $0000036C VOL: 0
; 0000 01E6             case 1:
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
; 0000 01E7                 PORTB.2 = 0;
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
; 0000 01E8                 break;
;PCODE: $00000372 VOL: 0
; 0000 01E9             case 0:
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
;PCODE: $00000375 VOL: 0
; 0000 01EA                 PORTB.0 = 0;
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
; 0000 01EB                 break;
;PCODE: $00000378 VOL: 0
; 0000 01EC             default:
;PCODE: $00000379 VOL: 0
; 0000 01ED                 break;
;PCODE: $0000037A VOL: 0
; 0000 01EE             }
;PCODE: $0000037B VOL: 0
; 0000 01EF         }
; 0000 01F0         // -- Transmision Serial -- //
; 0000 01F1         if (PINC.5 == 0){
;PCODE: $0000037C VOL: 0
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
; 0000 01F2             UART_write_txt("Str\n\r");
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
;PCODE: $00000382 VOL: 0
; 0000 01F3             play = 1;
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
; 0000 01F4             juego1 = 1;
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
; 0000 01F5         }while (PINC.5 == 0);
;PCODE: $00000387 VOL: 0
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
;PCODE: $0000038D VOL: 0
; 0000 01F6         if (PINC.4 == 0){
;PCODE: $0000038E VOL: 0
;PCODE: $0000038F VOL: 0
;PCODE: $00000390 VOL: 0
; 0000 01F7             UART_write_txt("Esc\n\r");
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
; 0000 01F8         }while (PINC.4 == 0);
;PCODE: $00000394 VOL: 0
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
; 0000 01F9         if (PINC.3 == 0){
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
; 0000 01FA             UART_write_txt("Jmp\n\r");
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
;PCODE: $000003A0 VOL: 0
; 0000 01FB         }while (PINC.3 == 0);
;PCODE: $000003A1 VOL: 0
;PCODE: $000003A2 VOL: 0
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
; 0000 01FC         if (PINC.2 == 0){
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
; 0000 01FD             UART_write_txt("Sho\n\r");
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
; 0000 01FE         }while (PINC.2 == 0);
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
; 0000 01FF     }
;PCODE: $000003B5 VOL: 0
;PCODE: $000003B6 VOL: 0
; 0000 0200 }
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0

	.DSEG
_0x45:
	.BYTE 0xAC
