
;CodeVisionAVR C Compiler V3.12 Advanced
;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com

;Build configuration    : Debug
;Chip type              : ATmega328P
;Program type           : Application
;Clock frequency        : 1.000000 MHz
;Memory model           : Small
;Optimize for           : Size
;(s)printf features     : int, width
;(s)scanf features      : int, width
;External RAM size      : 0
;Data Stack size        : 512 byte(s)
;Heap size              : 0 byte(s)
;Promote 'char' to 'int': Yes
;'char' is unsigned     : Yes
;8 bit enums            : Yes
;Global 'const' stored in FLASH: No
;Enhanced function parameter passing: Yes
;Enhanced core instructions: On
;Automatic register allocation for global variables: Off
;Smart register allocation: Off

	#define _MODEL_SMALL_

	#pragma AVRPART ADMIN PART_NAME ATmega328P
	#pragma AVRPART MEMORY PROG_FLASH 32768
	#pragma AVRPART MEMORY EEPROM 1024
	#pragma AVRPART MEMORY INT_SRAM SIZE 2048
	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x100

	#define CALL_SUPPORTED 1

	.LISTMAC
	.EQU EERE=0x0
	.EQU EEWE=0x1
	.EQU EEMWE=0x2
	.EQU UDRE=0x5
	.EQU RXC=0x7
	.EQU EECR=0x1F
	.EQU EEDR=0x20
	.EQU EEARL=0x21
	.EQU EEARH=0x22
	.EQU SPSR=0x2D
	.EQU SPDR=0x2E
	.EQU SMCR=0x33
	.EQU MCUSR=0x34
	.EQU MCUCR=0x35
	.EQU WDTCSR=0x60
	.EQU UCSR0A=0xC0
	.EQU UDR0=0xC6
	.EQU SPL=0x3D
	.EQU SPH=0x3E
	.EQU SREG=0x3F
	.EQU GPIOR0=0x1E

	.DEF R0X0=R0
	.DEF R0X1=R1
	.DEF R0X2=R2
	.DEF R0X3=R3
	.DEF R0X4=R4
	.DEF R0X5=R5
	.DEF R0X6=R6
	.DEF R0X7=R7
	.DEF R0X8=R8
	.DEF R0X9=R9
	.DEF R0XA=R10
	.DEF R0XB=R11
	.DEF R0XC=R12
	.DEF R0XD=R13
	.DEF R0XE=R14
	.DEF R0XF=R15
	.DEF R0X10=R16
	.DEF R0X11=R17
	.DEF R0X12=R18
	.DEF R0X13=R19
	.DEF R0X14=R20
	.DEF R0X15=R21
	.DEF R0X16=R22
	.DEF R0X17=R23
	.DEF R0X18=R24
	.DEF R0X19=R25
	.DEF R0X1A=R26
	.DEF R0X1B=R27
	.DEF R0X1C=R28
	.DEF R0X1D=R29
	.DEF R0X1E=R30
	.DEF R0X1F=R31

	.EQU __SRAM_START=0x0100
	.EQU __SRAM_END=0x08FF
	.EQU __DSTACK_SIZE=0x0200
	.EQU __HEAP_SIZE=0x0000
	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1

	.MACRO __CPD1N
	CPI  R30,LOW(@0)
	LDI  R26,HIGH(@0)
	CPC  R31,R26
	LDI  R26,BYTE3(@0)
	CPC  R22,R26
	LDI  R26,BYTE4(@0)
	CPC  R23,R26
	.ENDM

	.MACRO __CPD2N
	CPI  R26,LOW(@0)
	LDI  R30,HIGH(@0)
	CPC  R27,R30
	LDI  R30,BYTE3(@0)
	CPC  R24,R30
	LDI  R30,BYTE4(@0)
	CPC  R25,R30
	.ENDM

	.MACRO __CPWRR
	CP   R@0,R@2
	CPC  R@1,R@3
	.ENDM

	.MACRO __CPWRN
	CPI  R@0,LOW(@2)
	LDI  R30,HIGH(@2)
	CPC  R@1,R30
	.ENDM

	.MACRO __ADDB1MN
	SUBI R30,LOW(-@0-(@1))
	.ENDM

	.MACRO __ADDB2MN
	SUBI R26,LOW(-@0-(@1))
	.ENDM

	.MACRO __ADDW1MN
	SUBI R30,LOW(-@0-(@1))
	SBCI R31,HIGH(-@0-(@1))
	.ENDM

	.MACRO __ADDW2MN
	SUBI R26,LOW(-@0-(@1))
	SBCI R27,HIGH(-@0-(@1))
	.ENDM

	.MACRO __ADDW1FN
	SUBI R30,LOW(-2*@0-(@1))
	SBCI R31,HIGH(-2*@0-(@1))
	.ENDM

	.MACRO __ADDD1FN
	SUBI R30,LOW(-2*@0-(@1))
	SBCI R31,HIGH(-2*@0-(@1))
	SBCI R22,BYTE3(-2*@0-(@1))
	.ENDM

	.MACRO __ADDD1N
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	SBCI R22,BYTE3(-@0)
	SBCI R23,BYTE4(-@0)
	.ENDM

	.MACRO __ADDD2N
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	SBCI R24,BYTE3(-@0)
	SBCI R25,BYTE4(-@0)
	.ENDM

	.MACRO __SUBD1N
	SUBI R30,LOW(@0)
	SBCI R31,HIGH(@0)
	SBCI R22,BYTE3(@0)
	SBCI R23,BYTE4(@0)
	.ENDM

	.MACRO __SUBD2N
	SUBI R26,LOW(@0)
	SBCI R27,HIGH(@0)
	SBCI R24,BYTE3(@0)
	SBCI R25,BYTE4(@0)
	.ENDM

	.MACRO __ANDBMNN
	LDS  R30,@0+(@1)
	ANDI R30,LOW(@2)
	STS  @0+(@1),R30
	.ENDM

	.MACRO __ANDWMNN
	LDS  R30,@0+(@1)
	ANDI R30,LOW(@2)
	STS  @0+(@1),R30
	LDS  R30,@0+(@1)+1
	ANDI R30,HIGH(@2)
	STS  @0+(@1)+1,R30
	.ENDM

	.MACRO __ANDD1N
	ANDI R30,LOW(@0)
	ANDI R31,HIGH(@0)
	ANDI R22,BYTE3(@0)
	ANDI R23,BYTE4(@0)
	.ENDM

	.MACRO __ANDD2N
	ANDI R26,LOW(@0)
	ANDI R27,HIGH(@0)
	ANDI R24,BYTE3(@0)
	ANDI R25,BYTE4(@0)
	.ENDM

	.MACRO __ORBMNN
	LDS  R30,@0+(@1)
	ORI  R30,LOW(@2)
	STS  @0+(@1),R30
	.ENDM

	.MACRO __ORWMNN
	LDS  R30,@0+(@1)
	ORI  R30,LOW(@2)
	STS  @0+(@1),R30
	LDS  R30,@0+(@1)+1
	ORI  R30,HIGH(@2)
	STS  @0+(@1)+1,R30
	.ENDM

	.MACRO __ORD1N
	ORI  R30,LOW(@0)
	ORI  R31,HIGH(@0)
	ORI  R22,BYTE3(@0)
	ORI  R23,BYTE4(@0)
	.ENDM

	.MACRO __ORD2N
	ORI  R26,LOW(@0)
	ORI  R27,HIGH(@0)
	ORI  R24,BYTE3(@0)
	ORI  R25,BYTE4(@0)
	.ENDM

	.MACRO __DELAY_USB
	LDI  R24,LOW(@0)
__DELAY_USB_LOOP:
	DEC  R24
	BRNE __DELAY_USB_LOOP
	.ENDM

	.MACRO __DELAY_USW
	LDI  R24,LOW(@0)
	LDI  R25,HIGH(@0)
__DELAY_USW_LOOP:
	SBIW R24,1
	BRNE __DELAY_USW_LOOP
	.ENDM

	.MACRO __GETD1S
	LDD  R30,Y+@0
	LDD  R31,Y+@0+1
	LDD  R22,Y+@0+2
	LDD  R23,Y+@0+3
	.ENDM

	.MACRO __GETD2S
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	LDD  R24,Y+@0+2
	LDD  R25,Y+@0+3
	.ENDM

	.MACRO __PUTD1S
	STD  Y+@0,R30
	STD  Y+@0+1,R31
	STD  Y+@0+2,R22
	STD  Y+@0+3,R23
	.ENDM

	.MACRO __PUTD2S
	STD  Y+@0,R26
	STD  Y+@0+1,R27
	STD  Y+@0+2,R24
	STD  Y+@0+3,R25
	.ENDM

	.MACRO __PUTDZ2
	STD  Z+@0,R26
	STD  Z+@0+1,R27
	STD  Z+@0+2,R24
	STD  Z+@0+3,R25
	.ENDM

	.MACRO __CLRD1S
	STD  Y+@0,R30
	STD  Y+@0+1,R30
	STD  Y+@0+2,R30
	STD  Y+@0+3,R30
	.ENDM

	.MACRO __POINTB1MN
	LDI  R30,LOW(@0+(@1))
	.ENDM

	.MACRO __POINTW1MN
	LDI  R30,LOW(@0+(@1))
	LDI  R31,HIGH(@0+(@1))
	.ENDM

	.MACRO __POINTD1M
	LDI  R30,LOW(@0)
	LDI  R31,HIGH(@0)
	LDI  R22,BYTE3(@0)
	LDI  R23,BYTE4(@0)
	.ENDM

	.MACRO __POINTW1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	.ENDM

	.MACRO __POINTD1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	LDI  R22,BYTE3(2*@0+(@1))
	LDI  R23,BYTE4(2*@0+(@1))
	.ENDM

	.MACRO __POINTB2MN
	LDI  R26,LOW(@0+(@1))
	.ENDM

	.MACRO __POINTW2MN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	.ENDM

	.MACRO __POINTW2FN
	LDI  R26,LOW(2*@0+(@1))
	LDI  R27,HIGH(2*@0+(@1))
	.ENDM

	.MACRO __POINTD2FN
	LDI  R26,LOW(2*@0+(@1))
	LDI  R27,HIGH(2*@0+(@1))
	LDI  R24,BYTE3(2*@0+(@1))
	LDI  R25,BYTE4(2*@0+(@1))
	.ENDM

	.MACRO __POINTBRM
	LDI  R@0,LOW(@1)
	.ENDM

	.MACRO __POINTWRM
	LDI  R@0,LOW(@2)
	LDI  R@1,HIGH(@2)
	.ENDM

	.MACRO __POINTBRMN
	LDI  R@0,LOW(@1+(@2))
	.ENDM

	.MACRO __POINTWRMN
	LDI  R@0,LOW(@2+(@3))
	LDI  R@1,HIGH(@2+(@3))
	.ENDM

	.MACRO __POINTWRFN
	LDI  R@0,LOW(@2*2+(@3))
	LDI  R@1,HIGH(@2*2+(@3))
	.ENDM

	.MACRO __GETD1N
	LDI  R30,LOW(@0)
	LDI  R31,HIGH(@0)
	LDI  R22,BYTE3(@0)
	LDI  R23,BYTE4(@0)
	.ENDM

	.MACRO __GETD2N
	LDI  R26,LOW(@0)
	LDI  R27,HIGH(@0)
	LDI  R24,BYTE3(@0)
	LDI  R25,BYTE4(@0)
	.ENDM

	.MACRO __GETB1MN
	LDS  R30,@0+(@1)
	.ENDM

	.MACRO __GETB1HMN
	LDS  R31,@0+(@1)
	.ENDM

	.MACRO __GETW1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	.ENDM

	.MACRO __GETD1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	LDS  R22,@0+(@1)+2
	LDS  R23,@0+(@1)+3
	.ENDM

	.MACRO __GETBRMN
	LDS  R@0,@1+(@2)
	.ENDM

	.MACRO __GETWRMN
	LDS  R@0,@2+(@3)
	LDS  R@1,@2+(@3)+1
	.ENDM

	.MACRO __GETWRZ
	LDD  R@0,Z+@2
	LDD  R@1,Z+@2+1
	.ENDM

	.MACRO __GETD2Z
	LDD  R26,Z+@0
	LDD  R27,Z+@0+1
	LDD  R24,Z+@0+2
	LDD  R25,Z+@0+3
	.ENDM

	.MACRO __GETB2MN
	LDS  R26,@0+(@1)
	.ENDM

	.MACRO __GETW2MN
	LDS  R26,@0+(@1)
	LDS  R27,@0+(@1)+1
	.ENDM

	.MACRO __GETD2MN
	LDS  R26,@0+(@1)
	LDS  R27,@0+(@1)+1
	LDS  R24,@0+(@1)+2
	LDS  R25,@0+(@1)+3
	.ENDM

	.MACRO __PUTB1MN
	STS  @0+(@1),R30
	.ENDM

	.MACRO __PUTW1MN
	STS  @0+(@1),R30
	STS  @0+(@1)+1,R31
	.ENDM

	.MACRO __PUTD1MN
	STS  @0+(@1),R30
	STS  @0+(@1)+1,R31
	STS  @0+(@1)+2,R22
	STS  @0+(@1)+3,R23
	.ENDM

	.MACRO __PUTB1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRB
	.ENDM

	.MACRO __PUTW1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRW
	.ENDM

	.MACRO __PUTD1EN
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMWRD
	.ENDM

	.MACRO __PUTBR0MN
	STS  @0+(@1),R0
	.ENDM

	.MACRO __PUTBMRN
	STS  @0+(@1),R@2
	.ENDM

	.MACRO __PUTWMRN
	STS  @0+(@1),R@2
	STS  @0+(@1)+1,R@3
	.ENDM

	.MACRO __PUTBZR
	STD  Z+@1,R@0
	.ENDM

	.MACRO __PUTWZR
	STD  Z+@2,R@0
	STD  Z+@2+1,R@1
	.ENDM

	.MACRO __GETW1R
	MOV  R30,R@0
	MOV  R31,R@1
	.ENDM

	.MACRO __GETW2R
	MOV  R26,R@0
	MOV  R27,R@1
	.ENDM

	.MACRO __GETWRN
	LDI  R@0,LOW(@2)
	LDI  R@1,HIGH(@2)
	.ENDM

	.MACRO __PUTW1R
	MOV  R@0,R30
	MOV  R@1,R31
	.ENDM

	.MACRO __PUTW2R
	MOV  R@0,R26
	MOV  R@1,R27
	.ENDM

	.MACRO __ADDWRN
	SUBI R@0,LOW(-@2)
	SBCI R@1,HIGH(-@2)
	.ENDM

	.MACRO __ADDWRR
	ADD  R@0,R@2
	ADC  R@1,R@3
	.ENDM

	.MACRO __SUBWRN
	SUBI R@0,LOW(@2)
	SBCI R@1,HIGH(@2)
	.ENDM

	.MACRO __SUBWRR
	SUB  R@0,R@2
	SBC  R@1,R@3
	.ENDM

	.MACRO __ANDWRN
	ANDI R@0,LOW(@2)
	ANDI R@1,HIGH(@2)
	.ENDM

	.MACRO __ANDWRR
	AND  R@0,R@2
	AND  R@1,R@3
	.ENDM

	.MACRO __ORWRN
	ORI  R@0,LOW(@2)
	ORI  R@1,HIGH(@2)
	.ENDM

	.MACRO __ORWRR
	OR   R@0,R@2
	OR   R@1,R@3
	.ENDM

	.MACRO __EORWRR
	EOR  R@0,R@2
	EOR  R@1,R@3
	.ENDM

	.MACRO __GETWRS
	LDD  R@0,Y+@2
	LDD  R@1,Y+@2+1
	.ENDM

	.MACRO __PUTBSR
	STD  Y+@1,R@0
	.ENDM

	.MACRO __PUTWSR
	STD  Y+@2,R@0
	STD  Y+@2+1,R@1
	.ENDM

	.MACRO __MOVEWRR
	MOV  R@0,R@2
	MOV  R@1,R@3
	.ENDM

	.MACRO __INWR
	IN   R@0,@2
	IN   R@1,@2+1
	.ENDM

	.MACRO __OUTWR
	OUT  @2+1,R@1
	OUT  @2,R@0
	.ENDM

	.MACRO __CALL1MN
	LDS  R30,@0+(@1)
	LDS  R31,@0+(@1)+1
	ICALL
	.ENDM

	.MACRO __CALL1FN
	LDI  R30,LOW(2*@0+(@1))
	LDI  R31,HIGH(2*@0+(@1))
	CALL __GETW1PF
	ICALL
	.ENDM

	.MACRO __CALL2EN
	PUSH R26
	PUSH R27
	LDI  R26,LOW(@0+(@1))
	LDI  R27,HIGH(@0+(@1))
	CALL __EEPROMRDW
	POP  R27
	POP  R26
	ICALL
	.ENDM

	.MACRO __CALL2EX
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	CALL __EEPROMRDD
	ICALL
	.ENDM

	.MACRO __GETW1STACK
	IN   R30,SPL
	IN   R31,SPH
	ADIW R30,@0+1
	LD   R0,Z+
	LD   R31,Z
	MOV  R30,R0
	.ENDM

	.MACRO __GETD1STACK
	IN   R30,SPL
	IN   R31,SPH
	ADIW R30,@0+1
	LD   R0,Z+
	LD   R1,Z+
	LD   R22,Z
	MOVW R30,R0
	.ENDM

	.MACRO __NBST
	BST  R@0,@1
	IN   R30,SREG
	LDI  R31,0x40
	EOR  R30,R31
	OUT  SREG,R30
	.ENDM


	.MACRO __PUTB1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SN
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SNS
	LDD  R26,Y+@0
	LDD  R27,Y+@0+1
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1PMN
	LDS  R26,@0
	LDS  R27,@0+1
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1PMNS
	LDS  R26,@0
	LDS  R27,@0+1
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RN
	MOVW R26,R@0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RNS
	MOVW R26,R@0
	ADIW R26,@1
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RNS
	MOVW R26,R@0
	ADIW R26,@1
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RNS
	MOVW R26,R@0
	ADIW R26,@1
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RON
	MOV  R26,R@0
	MOV  R27,R@1
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	CALL __PUTDP1
	.ENDM

	.MACRO __PUTB1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	ST   X,R30
	.ENDM

	.MACRO __PUTW1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1RONS
	MOV  R26,R@0
	MOV  R27,R@1
	ADIW R26,@2
	CALL __PUTDP1
	.ENDM


	.MACRO __GETB1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R30,Z
	.ENDM

	.MACRO __GETB1HSX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R31,Z
	.ENDM

	.MACRO __GETW1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R0,Z+
	LD   R31,Z
	MOV  R30,R0
	.ENDM

	.MACRO __GETD1SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R0,Z+
	LD   R1,Z+
	LD   R22,Z+
	LD   R23,Z
	MOVW R30,R0
	.ENDM

	.MACRO __GETB2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R26,X
	.ENDM

	.MACRO __GETW2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	.ENDM

	.MACRO __GETD2SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R1,X+
	LD   R24,X+
	LD   R25,X
	MOVW R26,R0
	.ENDM

	.MACRO __GETBRSX
	MOVW R30,R28
	SUBI R30,LOW(-@1)
	SBCI R31,HIGH(-@1)
	LD   R@0,Z
	.ENDM

	.MACRO __GETWRSX
	MOVW R30,R28
	SUBI R30,LOW(-@2)
	SBCI R31,HIGH(-@2)
	LD   R@0,Z+
	LD   R@1,Z
	.ENDM

	.MACRO __GETBRSX2
	MOVW R26,R28
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	LD   R@0,X
	.ENDM

	.MACRO __GETWRSX2
	MOVW R26,R28
	SUBI R26,LOW(-@2)
	SBCI R27,HIGH(-@2)
	LD   R@0,X+
	LD   R@1,X
	.ENDM

	.MACRO __LSLW8SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	LD   R31,Z
	CLR  R30
	.ENDM

	.MACRO __PUTB1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __CLRW1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X,R30
	.ENDM

	.MACRO __CLRD1SX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	ST   X+,R30
	ST   X+,R30
	ST   X+,R30
	ST   X,R30
	.ENDM

	.MACRO __PUTB2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z,R26
	.ENDM

	.MACRO __PUTW2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z+,R26
	ST   Z,R27
	.ENDM

	.MACRO __PUTD2SX
	MOVW R30,R28
	SUBI R30,LOW(-@0)
	SBCI R31,HIGH(-@0)
	ST   Z+,R26
	ST   Z+,R27
	ST   Z+,R24
	ST   Z,R25
	.ENDM

	.MACRO __PUTBSRX
	MOVW R30,R28
	SUBI R30,LOW(-@1)
	SBCI R31,HIGH(-@1)
	ST   Z,R@0
	.ENDM

	.MACRO __PUTWSRX
	MOVW R30,R28
	SUBI R30,LOW(-@2)
	SBCI R31,HIGH(-@2)
	ST   Z+,R@0
	ST   Z,R@1
	.ENDM

	.MACRO __PUTB1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X,R30
	.ENDM

	.MACRO __PUTW1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X,R31
	.ENDM

	.MACRO __PUTD1SNX
	MOVW R26,R28
	SUBI R26,LOW(-@0)
	SBCI R27,HIGH(-@0)
	LD   R0,X+
	LD   R27,X
	MOV  R26,R0
	SUBI R26,LOW(-@1)
	SBCI R27,HIGH(-@1)
	ST   X+,R30
	ST   X+,R31
	ST   X+,R22
	ST   X,R23
	.ENDM

	.MACRO __MULBRR
	MULS R@0,R@1
	MOVW R30,R0
	.ENDM

	.MACRO __MULBRRU
	MUL  R@0,R@1
	MOVW R30,R0
	.ENDM

	.MACRO __MULBRR0
	MULS R@0,R@1
	.ENDM

	.MACRO __MULBRRU0
	MUL  R@0,R@1
	.ENDM

	.MACRO __MULBNWRU
	LDI  R26,@2
	MUL  R26,R@0
	MOVW R30,R0
	MUL  R26,R@1
	ADD  R31,R0
	.ENDM

;GPIOR0 INITIALIZATION VALUE
	.EQU __GPIOR0_INIT=0x00

	.CSEG
	.ORG 0x00

;START OF CODE MARKER
__START_OF_CODE:

;INTERRUPT VECTORS
	JMP  __RESET
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00
	JMP  0x00

_font5x7:
	.DB  0x5,0x7,0x20,0x60,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x5F,0x0,0x0,0x0,0x7
	.DB  0x0,0x7,0x0,0x14,0x7F,0x14,0x7F,0x14
	.DB  0x24,0x2A,0x7F,0x2A,0x12,0x23,0x13,0x8
	.DB  0x64,0x62,0x36,0x49,0x55,0x22,0x50,0x0
	.DB  0x5,0x3,0x0,0x0,0x0,0x1C,0x22,0x41
	.DB  0x0,0x0,0x41,0x22,0x1C,0x0,0x8,0x2A
	.DB  0x1C,0x2A,0x8,0x8,0x8,0x3E,0x8,0x8
	.DB  0x0,0x50,0x30,0x0,0x0,0x8,0x8,0x8
	.DB  0x8,0x8,0x0,0x30,0x30,0x0,0x0,0x20
	.DB  0x10,0x8,0x4,0x2,0x3E,0x51,0x49,0x45
	.DB  0x3E,0x0,0x42,0x7F,0x40,0x0,0x42,0x61
	.DB  0x51,0x49,0x46,0x21,0x41,0x45,0x4B,0x31
	.DB  0x18,0x14,0x12,0x7F,0x10,0x27,0x45,0x45
	.DB  0x45,0x39,0x3C,0x4A,0x49,0x49,0x30,0x1
	.DB  0x71,0x9,0x5,0x3,0x36,0x49,0x49,0x49
	.DB  0x36,0x6,0x49,0x49,0x29,0x1E,0x0,0x36
	.DB  0x36,0x0,0x0,0x0,0x56,0x36,0x0,0x0
	.DB  0x0,0x8,0x14,0x22,0x41,0x14,0x14,0x14
	.DB  0x14,0x14,0x41,0x22,0x14,0x8,0x0,0x2
	.DB  0x1,0x51,0x9,0x6,0x32,0x49,0x79,0x41
	.DB  0x3E,0x7E,0x11,0x11,0x11,0x7E,0x7F,0x49
	.DB  0x49,0x49,0x36,0x3E,0x41,0x41,0x41,0x22
	.DB  0x7F,0x41,0x41,0x22,0x1C,0x7F,0x49,0x49
	.DB  0x49,0x41,0x7F,0x9,0x9,0x1,0x1,0x3E
	.DB  0x41,0x41,0x51,0x32,0x7F,0x8,0x8,0x8
	.DB  0x7F,0x0,0x41,0x7F,0x41,0x0,0x20,0x40
	.DB  0x41,0x3F,0x1,0x7F,0x8,0x14,0x22,0x41
	.DB  0x7F,0x40,0x40,0x40,0x40,0x7F,0x2,0x4
	.DB  0x2,0x7F,0x7F,0x4,0x8,0x10,0x7F,0x3E
	.DB  0x41,0x41,0x41,0x3E,0x7F,0x9,0x9,0x9
	.DB  0x6,0x3E,0x41,0x51,0x21,0x5E,0x7F,0x9
	.DB  0x19,0x29,0x46,0x46,0x49,0x49,0x49,0x31
	.DB  0x1,0x1,0x7F,0x1,0x1,0x3F,0x40,0x40
	.DB  0x40,0x3F,0x1F,0x20,0x40,0x20,0x1F,0x7F
	.DB  0x20,0x18,0x20,0x7F,0x63,0x14,0x8,0x14
	.DB  0x63,0x3,0x4,0x78,0x4,0x3,0x61,0x51
	.DB  0x49,0x45,0x43,0x0,0x0,0x7F,0x41,0x41
	.DB  0x2,0x4,0x8,0x10,0x20,0x41,0x41,0x7F
	.DB  0x0,0x0,0x4,0x2,0x1,0x2,0x4,0x40
	.DB  0x40,0x40,0x40,0x40,0x0,0x1,0x2,0x4
	.DB  0x0,0x20,0x54,0x54,0x54,0x78,0x7F,0x48
	.DB  0x44,0x44,0x38,0x38,0x44,0x44,0x44,0x20
	.DB  0x38,0x44,0x44,0x48,0x7F,0x38,0x54,0x54
	.DB  0x54,0x18,0x8,0x7E,0x9,0x1,0x2,0x8
	.DB  0x14,0x54,0x54,0x3C,0x7F,0x8,0x4,0x4
	.DB  0x78,0x0,0x44,0x7D,0x40,0x0,0x20,0x40
	.DB  0x44,0x3D,0x0,0x0,0x7F,0x10,0x28,0x44
	.DB  0x0,0x41,0x7F,0x40,0x0,0x7C,0x4,0x18
	.DB  0x4,0x78,0x7C,0x8,0x4,0x4,0x78,0x38
	.DB  0x44,0x44,0x44,0x38,0x7C,0x14,0x14,0x14
	.DB  0x8,0x8,0x14,0x14,0x18,0x7C,0x7C,0x8
	.DB  0x4,0x4,0x8,0x48,0x54,0x54,0x54,0x20
	.DB  0x4,0x3F,0x44,0x40,0x20,0x3C,0x40,0x40
	.DB  0x20,0x7C,0x1C,0x20,0x40,0x20,0x1C,0x3C
	.DB  0x40,0x30,0x40,0x3C,0x44,0x28,0x10,0x28
	.DB  0x44,0xC,0x50,0x50,0x50,0x3C,0x44,0x64
	.DB  0x54,0x4C,0x44,0x0,0x8,0x36,0x41,0x0
	.DB  0x0,0x0,0x7F,0x0,0x0,0x0,0x41,0x36
	.DB  0x8,0x0,0x2,0x1,0x2,0x4,0x2,0x7F
	.DB  0x41,0x41,0x41,0x7F
_imagen1:
	.DB  0x54,0x0,0x30,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x3C,0x3C,0xEC
	.DB  0xFC,0xB0,0xF0,0xB0,0x30,0x30,0xB0,0xB0
	.DB  0xB0,0x30,0xB0,0xB0,0xEC,0xEC,0x3C,0x3C
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x80
	.DB  0x80,0xFF,0xFF,0xBA,0xB8,0x76,0xFF,0xFC
	.DB  0xFA,0xFE,0xFF,0xFB,0xFF,0xFF,0xFF,0xDB
	.DB  0xFE,0xFD,0xFF,0xFF,0x80,0x80,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x9C
	.DB  0x9E,0xFF,0xFF,0x3F,0xBF,0xBE,0xFC,0xEC
	.DB  0xEC,0xEC,0xEC,0xEE,0xF8,0xB8,0xF8,0xF8
	.DB  0xE0,0xE0,0xE0,0xE0,0x80,0x80,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0xE0,0xE0,0xFF,0x1F,0xFD,0xFA,0xFF
	.DB  0xFF,0xFD,0xFF,0xFF,0xFF,0xDF,0xDF,0xDF
	.DB  0xFF,0xE7,0xFF,0xFD,0xFF,0xFE,0xFF,0xFF
	.DB  0xFF,0xFF,0x60,0x60,0x60,0x60,0x98,0x38
	.DB  0x98,0x5E,0xE6,0xF7,0x79,0xFD,0xFA,0xF6
	.DB  0xF7,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xEF
	.DB  0xFF,0xFF,0xFF,0xFD,0xFF,0xFF,0xFE,0xFF
	.DB  0xFD,0xFF,0xFE,0xFE,0xF8,0x20,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0xE0,0xF0,0xFF,0xDF,0xFF
	.DB  0xFB,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x5F
	.DB  0x5F,0x97,0x49,0xB9,0xA9,0xAD,0xAD,0xEC
	.DB  0xF6,0xD3,0x93,0xF3,0xFD,0xFD,0xFF,0xFF
	.DB  0xF7,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
	.DB  0x3F,0x3F,0xF,0xF,0xF,0xF,0x3,0x3
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1F
	.DB  0x3F,0xFF,0xFE,0xFF,0xFF,0xFF,0xFF,0xFF
	.DB  0xFF,0x7F,0x7F,0x7F,0x7F,0x7F,0xFF,0xFF
	.DB  0xFF,0xC0,0xFE,0xFE,0xF9,0xFD,0xBE,0x7C
	.DB  0xFE,0xFF,0xFF,0xFF,0xFE,0xFE,0xFF,0xFF
	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
	.DB  0xFF,0x7F,0x7F,0x3F,0x3F,0xFE,0xFF,0xFF
	.DB  0xFF,0xFF,0x3,0x3,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x1,0x1,0x1
	.DB  0x1,0x1,0x1,0x1,0x1,0x0,0x0,0x0
	.DB  0x0,0x0,0x2,0x7,0x1F,0x1F,0x7F,0x7F
	.DB  0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F
	.DB  0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F,0x7F
	.DB  0x7F,0x79,0x79,0x1,0x1,0x0,0x0,0x0
	.DB  0x0,0x7,0xF,0x1F,0x1F,0x1F,0x1E,0x1C
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0
_imagen11:
	.DB  0x54,0x0,0x30,0x0,0x0,0x0,0x0,0x80
	.DB  0x80,0x60,0x60,0x60,0x80,0x80,0x0,0x0
	.DB  0x0,0x0,0x0,0x80,0x60,0x60,0x80,0x0
	.DB  0x0,0xE0,0xE0,0xE0,0x0,0x0,0x0,0x0
	.DB  0x0,0xE0,0xE0,0xE0,0x0,0x0,0x0,0x0
	.DB  0xE0,0x60,0x60,0x60,0x60,0x60,0x0,0x0
	.DB  0xE0,0x80,0x80,0x0,0x0,0x0,0xE0,0xE0
	.DB  0x0,0x0,0x0,0xE0,0xE0,0x60,0x60,0x60
	.DB  0x60,0x0,0x0,0x80,0x80,0x60,0x60,0x60
	.DB  0x80,0x0,0x0,0x60,0x60,0x60,0xE0,0xE0
	.DB  0x60,0x60,0x60,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x7F,0x7F,0x80,0x8C,0x8C
	.DB  0xFC,0xFC,0x0,0xE0,0xE0,0x1C,0x1C,0x13
	.DB  0x10,0x10,0x1F,0xE0,0xE0,0xFF,0xFF,0x0
	.DB  0x7F,0x7F,0x80,0x7F,0x7F,0x0,0x0,0xFF
	.DB  0x0,0x0,0x0,0x0,0xFF,0x8C,0x8C,0x8C
	.DB  0x80,0x80,0x0,0x0,0xFF,0x3,0x3,0xC
	.DB  0x70,0x70,0xFF,0xFF,0x0,0x0,0x0,0xFF
	.DB  0xFF,0x8C,0x8C,0x8C,0x80,0x0,0x0,0x63
	.DB  0x63,0x8C,0x8C,0x8C,0x70,0x0,0x0,0x0
	.DB  0x0,0x0,0xFF,0xFF,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x1,0x1,0x1,0x1,0x1,0x0,0x1
	.DB  0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x1
	.DB  0x1,0x1,0x1,0x0,0x0,0x0,0x1,0x0
	.DB  0x0,0x0,0x0,0x1,0x0,0x0,0x0,0x0
	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x0,0x0
	.DB  0x1,0x0,0x0,0x0,0x0,0x0,0x1,0x1
	.DB  0x0,0x0,0x0,0x1,0x1,0x1,0x1,0x1
	.DB  0x1,0x0,0x0,0x0,0x0,0x1,0x1,0x1
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x1
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0xF0,0xF0,0x30,0x30,0x30,0x30,0x30,0xC0
	.DB  0x0,0x0,0x0,0x0,0xC0,0x30,0x30,0xC0
	.DB  0x0,0x0,0x0,0x0,0xF0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0xFF,0xFF,0x6,0x6
	.DB  0x6,0x6,0x6,0x1,0xF0,0xF0,0xE,0xE
	.DB  0x9,0x8,0x8,0xF,0xF0,0xF0,0x0,0x0
	.DB  0xFF,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0
_imagen2:
	.DB  0x54,0x0,0x30,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x80,0x80
	.DB  0x60,0x60,0xF8,0xF8,0xE0,0xE0,0x80,0x80
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x80,0x80,0xE0
	.DB  0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0
	.DB  0xE0,0xE0,0x18,0x98,0x98,0x98,0x98,0x98
	.DB  0x98,0x98,0xFF,0xFF,0xE0,0xF0,0x9F,0x9F
	.DB  0xFF,0xFF,0xFF,0xFF,0xF8,0x98,0x98,0x98
	.DB  0x98,0x98,0x98,0x98,0xE0,0xE0,0xE0,0xE0
	.DB  0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0x80
	.DB  0x80,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x7,0x7,0x1F,0x1F,0x1B,0x1F,0x1F
	.DB  0x1F,0x1F,0x1F,0x1F,0x6F,0x7F,0x7B,0x7F
	.DB  0x6F,0x7F,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF
	.DB  0x3F,0x3F,0xFF,0xFC,0xFF,0xFF,0xFF,0xFF
	.DB  0xFF,0xEF,0xFF,0xFF,0x7F,0x6F,0x7F,0x7B
	.DB  0x7F,0x6F,0x7F,0x1F,0x1F,0x1F,0x1F,0x1F
	.DB  0x1F,0x1B,0x1F,0x7,0x7,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x1
	.DB  0x1,0x1,0x7,0x7,0xF8,0xF8,0xFF,0xBF
	.DB  0xFF,0xFF,0xF,0xF,0x3,0x1,0x1,0x1
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0xC0,0xC0,0xC0,0xC0
	.DB  0xFF,0xFF,0xF,0xF,0xFF,0xFF,0xC0,0xC0
	.DB  0xC0,0xC0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0xF,0xF
	.DB  0xF,0xF,0xF,0xF,0xF,0xF,0x3F,0x3F
	.DB  0xF,0xF,0xF,0xF,0xF,0xF,0xF,0xF
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0
_imagen4:
	.DB  0x54,0x0,0x30,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x80,0x80,0x80,0x80,0xE0,0xE0
	.DB  0xE0,0xE0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x80,0x80,0xE0,0xE0,0xE0,0xE0,0xE0
	.DB  0xE0,0xE0,0xE0,0x80,0x80,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0
	.DB  0xE0,0xE0,0xE0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0
	.DB  0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0,0xE0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x7E,0x7E,0x7E,0x7E,0x7F,0x7F
	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0xFE,0xFF,0xFF,0xFF
	.DB  0xFF,0x1,0x1,0x1,0x1,0xFF,0xFF,0xFF
	.DB  0xFF,0xFE,0xFE,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0xF8,0xF8,0xFF,0xFF,0xFF
	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0xFF,0xFF,0xFF
	.DB  0xFF,0xFF,0x1,0x1,0x81,0x81,0x81,0x81
	.DB  0x81,0x81,0x1,0x1,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0xFF,0xFF,0xFF,0xFF
	.DB  0xFF,0xFF,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0x0,0x0,0x0
	.DB  0x0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0xF8,0xF8,0xFF
	.DB  0xFF,0xFF,0xFF,0x1,0x1,0xFF,0xFF,0xFF
	.DB  0xFF,0xFF,0xFF,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0xFF,0xFF,0xFF,0xFF,0xFF,0x6,0x6
	.DB  0x7,0x7,0xFF,0xFF,0xFF,0xFF,0xFE,0xFE
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0xF,0x7F,0x7F,0x7F
	.DB  0x7F,0x7C,0x7C,0x7C,0x7C,0xFF,0xFF,0xFF
	.DB  0xFF,0xFF,0xFF,0x0,0x0,0x0,0x0,0xFC
	.DB  0xFC,0xFF,0xFF,0xFF,0xFF,0xF0,0xF0,0xF0
	.DB  0xF0,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xF0
	.DB  0xF0,0x0,0x0,0x0,0x0,0xF0,0xF0,0xF0
	.DB  0xF0,0xF0,0x0,0x0,0x0,0x0,0xFF,0xFF
	.DB  0xFF,0xFF,0xFF,0xFF,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0xFF,0xFF,0xFF,0xFF
	.DB  0xFF,0xFF,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x7E,0xFE,0xFE,0xFE,0xFE,0x80,0x80,0x80
	.DB  0x80,0xFF,0xFF,0xFF,0xFF,0x7F,0x7F,0x0
	.DB  0x0,0x0,0x0,0x7,0x7,0x7,0x7,0x7
	.DB  0x7,0x7,0x7,0x7,0x7,0xFF,0xFF,0xFF
	.DB  0xFF,0xFF,0xFF,0x7,0x7,0x0,0x0,0x0
	.DB  0x0,0x7F,0x7F,0xFF,0xFF,0xFF,0x80,0x80
	.DB  0x80,0x80,0xFF,0xFF,0xFF,0xFF,0x7F,0x7F
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x7,0x7,0x7,0x7,0x7,0x7,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x1,0x1,0x7
	.DB  0x7,0x7,0x7,0x7,0x7,0x7,0x7,0x1
	.DB  0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x7,0x7,0x7,0x7,0x7,0x7,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1
	.DB  0x7,0x7,0x7,0x7,0x7,0x7,0x7,0x7
	.DB  0x1,0x1,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0
_imagen5:
	.DB  0x54,0x0,0x30,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x80,0x80,0x80,0x80,0x80
	.DB  0x80,0x80,0x80,0x80,0x80,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x80,0x80,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x80,0x80
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x80,0x80,0x0
	.DB  0x0,0x0,0x0,0x0,0x80,0x80,0x80,0x80
	.DB  0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80
	.DB  0x80,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0xCE,0xCE,0x1
	.DB  0x1,0x1,0x1,0x1,0x31,0x31,0x31,0x31
	.DB  0x31,0xB2,0xB2,0xB2,0x0,0x0,0x0,0x0
	.DB  0x0,0xC0,0xC0,0x4E,0x4E,0x4E,0x43,0x43
	.DB  0x4C,0x4C,0x4C,0xC0,0xC0,0x0,0x0,0x0
	.DB  0x0,0x0,0xFF,0xFF,0x2,0x2,0x2,0x70
	.DB  0x70,0x0,0x0,0x0,0x0,0x0,0x2,0x2
	.DB  0x2,0xFF,0xFF,0x0,0x0,0x0,0x0,0x0
	.DB  0xFF,0xFF,0xFF,0x31,0x31,0x31,0x31,0x31
	.DB  0x31,0x31,0x31,0x31,0x31,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x1,0x1,0x6,0x6,0x6,0x6,0x6
	.DB  0x6,0x6,0x6,0x6,0x6,0x1,0x1,0x1
	.DB  0x0,0x0,0x6,0x6,0x6,0x1,0x1,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1
	.DB  0x1,0x6,0x6,0x6,0x0,0x0,0x7,0x7
	.DB  0x0,0x0,0x0,0x0,0x0,0x6,0x6,0x6
	.DB  0x0,0x0,0x0,0x0,0x0,0x7,0x7,0x0
	.DB  0x0,0x0,0x0,0x0,0x7,0x7,0x7,0x6
	.DB  0x6,0x6,0x6,0x6,0x6,0x6,0x6,0x6
	.DB  0x6,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x80,0x80,0x60
	.DB  0x60,0x60,0x60,0x60,0x60,0x60,0x60,0x60
	.DB  0x60,0x80,0x80,0x80,0x0,0x0,0x60,0x60
	.DB  0x60,0x80,0x80,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x80,0x80,0x60,0x60,0x60
	.DB  0x0,0x0,0xE0,0xE0,0x60,0x60,0x60,0x60
	.DB  0x60,0x60,0x60,0x60,0x60,0x60,0x0,0x0
	.DB  0x0,0x0,0x0,0xE0,0xE0,0xE0,0x60,0x60
	.DB  0x60,0x60,0x60,0x60,0x60,0xE0,0xE0,0xE0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x41,0x41,0x80,0x80,0x80,0x80,0x80
	.DB  0x80,0x80,0x80,0x80,0x80,0x41,0x41,0x41
	.DB  0x0,0x0,0x0,0x0,0x0,0x3,0x3,0x70
	.DB  0x70,0x70,0x80,0x80,0x70,0x70,0x70,0x3
	.DB  0x3,0x0,0x0,0x0,0x0,0x0,0xFF,0xFF
	.DB  0x8C,0x8C,0x8C,0x8C,0x8C,0x8C,0x8C,0x8C
	.DB  0x8C,0x8C,0x0,0x0,0x0,0x0,0x0,0xFF
	.DB  0xFF,0xFF,0xC,0xC,0xC,0xC,0xC,0x3C
	.DB  0x3C,0xCF,0xCF,0xCF,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1
	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x1,0x1
	.DB  0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x1
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x1,0x1,0x1,0x1,0x1,0x1
	.DB  0x1,0x1,0x1,0x1,0x1,0x1,0x0,0x0
	.DB  0x0,0x0,0x0,0x1,0x1,0x1,0x0,0x0
	.DB  0x0,0x0,0x0,0x0,0x0,0x1,0x1,0x1
	.DB  0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0
	.DB  0x0,0x0,0x0,0x0
__glcd_mask:
	.DB  0x0,0x1,0x3,0x7,0xF,0x1F,0x3F,0x7F
	.DB  0xFF
_tbl10_G103:
	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
	.DB  0x1,0x0
_tbl16_G103:
	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0

_0x3:
	.DB  0x3,0x3,0x3,0x2,0x2,0xC,0x0,0x8
	.DB  0x0,0x1,0x0,0x6
_0x2D:
	.DB  0x4
_0x0:
	.DB  0x49,0x0,0xA,0xD,0x0,0x44,0x0,0x61
	.DB  0x0,0x41,0x0,0x4C,0x45,0x44,0x31,0x20
	.DB  0x65,0x6E,0x63,0x65,0x6E,0x64,0x69,0x64
	.DB  0x6F,0xA,0xD,0x0,0x4C,0x45,0x44,0x31
	.DB  0x20,0x41,0x70,0x61,0x67,0x61,0x64,0x6F
	.DB  0xA,0xD,0x0,0x4C,0x45,0x44,0x32,0x20
	.DB  0x65,0x6E,0x63,0x65,0x6E,0x64,0x69,0x64
	.DB  0x6F,0xA,0xD,0x0,0x4C,0x45,0x44,0x32
	.DB  0x20,0x61,0x70,0x61,0x67,0x61,0x64,0x6F
	.DB  0xA,0xD,0x0,0x4C,0x45,0x44,0x33,0x20
	.DB  0x65,0x6E,0x63,0x65,0x6E,0x64,0x69,0x64
	.DB  0x6F,0xA,0xD,0x0,0x4C,0x45,0x44,0x33
	.DB  0x20,0x61,0x70,0x61,0x67,0x61,0x64,0x6F
	.DB  0xA,0xD,0x0,0x4C,0x45,0x44,0x34,0x20
	.DB  0x65,0x6E,0x63,0x65,0x6E,0x64,0x69,0x64
	.DB  0x6F,0xA,0xD,0x0,0x4C,0x45,0x44,0x34
	.DB  0x20,0x61,0x70,0x61,0x67,0x61,0x64,0x6F
	.DB  0xA,0xD,0x0,0x53,0x74,0x72,0xA,0xD
	.DB  0x0,0x45,0x73,0x63,0xA,0xD,0x0,0x4A
	.DB  0x6D,0x70,0xA,0xD,0x0,0x53,0x68,0x6F
	.DB  0xA,0xD,0x0
_0x2100060:
	.DB  0x1
_0x2100000:
	.DB  0x2D,0x4E,0x41,0x4E,0x0,0x49,0x4E,0x46
	.DB  0x0

__GLOBAL_INI_TBL:
	.DW  0x01
	.DW  _vidas
	.DW  _0x2D*2

	.DW  0x02
	.DW  _0x45
	.DW  _0x0*2

	.DW  0x03
	.DW  _0x45+2
	.DW  _0x0*2+2

	.DW  0x02
	.DW  _0x45+5
	.DW  _0x0*2+5

	.DW  0x03
	.DW  _0x45+7
	.DW  _0x0*2+2

	.DW  0x02
	.DW  _0x45+10
	.DW  _0x0*2+7

	.DW  0x03
	.DW  _0x45+12
	.DW  _0x0*2+2

	.DW  0x02
	.DW  _0x45+15
	.DW  _0x0*2+9

	.DW  0x03
	.DW  _0x45+17
	.DW  _0x0*2+2

	.DW  0x11
	.DW  _0x45+20
	.DW  _0x0*2+11

	.DW  0x0F
	.DW  _0x45+37
	.DW  _0x0*2+28

	.DW  0x11
	.DW  _0x45+52
	.DW  _0x0*2+43

	.DW  0x0F
	.DW  _0x45+69
	.DW  _0x0*2+60

	.DW  0x11
	.DW  _0x45+84
	.DW  _0x0*2+75

	.DW  0x0F
	.DW  _0x45+101
	.DW  _0x0*2+92

	.DW  0x11
	.DW  _0x45+116
	.DW  _0x0*2+107

	.DW  0x0F
	.DW  _0x45+133
	.DW  _0x0*2+124

	.DW  0x06
	.DW  _0x45+148
	.DW  _0x0*2+139

	.DW  0x06
	.DW  _0x45+154
	.DW  _0x0*2+145

	.DW  0x06
	.DW  _0x45+160
	.DW  _0x0*2+151

	.DW  0x06
	.DW  _0x45+166
	.DW  _0x0*2+157

	.DW  0x01
	.DW  __seed_G108
	.DW  _0x2100060*2

_0xFFFFFFFF:
	.DW  0

#define __GLOBAL_INI_TBL_PRESENT 1

__RESET:
	CLI
	CLR  R30
	OUT  EECR,R30

;INTERRUPT VECTORS ARE PLACED
;AT THE START OF FLASH
	LDI  R31,1
	OUT  MCUCR,R31
	OUT  MCUCR,R30

;CLEAR R2-R14
	LDI  R24,(14-2)+1
	LDI  R26,2
	CLR  R27
__CLEAR_REG:
	ST   X+,R30
	DEC  R24
	BRNE __CLEAR_REG

;CLEAR SRAM
	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
	LDI  R26,LOW(__SRAM_START)
	LDI  R27,HIGH(__SRAM_START)
__CLEAR_SRAM:
	ST   X+,R30
	SBIW R24,1
	BRNE __CLEAR_SRAM

;GLOBAL VARIABLES INITIALIZATION
	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
__GLOBAL_INI_NEXT:
	LPM  R24,Z+
	LPM  R25,Z+
	SBIW R24,0
	BREQ __GLOBAL_INI_END
	LPM  R26,Z+
	LPM  R27,Z+
	LPM  R0,Z+
	LPM  R1,Z+
	MOVW R22,R30
	MOVW R30,R0
__GLOBAL_INI_LOOP:
	LPM  R0,Z+
	ST   X+,R0
	SBIW R24,1
	BRNE __GLOBAL_INI_LOOP
	MOVW R30,R22
	RJMP __GLOBAL_INI_NEXT
__GLOBAL_INI_END:

;GPIOR0 INITIALIZATION
	LDI  R30,__GPIOR0_INIT
	OUT  GPIOR0,R30

;HARDWARE STACK POINTER INITIALIZATION
	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
	OUT  SPL,R30
	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
	OUT  SPH,R30

;DATA STACK POINTER INITIALIZATION
	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)

	JMP  _main

	.ESEG
	.ORG 0

	.DSEG
	.ORG 0x300

	.CSEG
;/*
; * PrimerMicro.c
; *
; * Created: 04/05/2017 04:59:22 p. m.
; * Author: adomingu
; * Made with love by: Agui, Pau, Isra.
; */
;
;// Librerias Display Nokia
;#include <mega328p.h>
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x01
	.EQU __sm_mask=0x0E
	.EQU __sm_adc_noise_red=0x02
	.EQU __sm_powerdown=0x04
	.EQU __sm_powersave=0x06
	.EQU __sm_standby=0x0C
	.EQU __sm_ext_standby=0x0E
	.SET power_ctrl_reg=smcr
	#endif
;#include <io.h>
;#include <delay.h>
;// Graphic Display functions
;#include <glcd.h>
;
;// Font used for displaying text
;// on the graphic display
;#include <font5x7.h>
;
;// Librerias proyecto
;#include <io.h>
;#include <delay.h>
;#include <display.h>

	.CSEG
;	TableSetup -> Y+1
;	i -> R16
; 0000 0017     SBI __lcd_port-1,__lcd_EN
;	dato -> Y+0
;	Comando -> Y+1
;	tempComando -> R16
;	dato -> Y+1
;	tempdato -> R16
;	i -> R16
;	tiempo -> Y+1
;	i -> R16
;	Mensaje -> Y+1
;	i -> R16
;	x -> Y+1
;	y -> Y+0
;	NoCaracter -> Y+3
;	datos -> Y+1
;	i -> R16
;#include <stdio.h>
;#include <stdint.h>
;#include "FuncionesSerial.h"
_UART_read:
; .FSTART _UART_read
	LDS  R30,192
	ANDI R30,LOW(0x80)
	BREQ _0x22
	LDS  R30,198
	RET
_0x22:
	LDI  R30,LOW(0)
	RET
	RET
; .FEND
_UART_write:
; .FSTART _UART_write
	ST   -Y,R26
;	caracter -> Y+0
_0x24:
	LDS  R30,192
	ANDI R30,LOW(0x20)
	BREQ _0x24
	JMP  _0x2120005
; .FEND
_UART_write_txt:
; .FSTART _UART_write_txt
	ST   -Y,R27
	ST   -Y,R26
;	*cadena -> Y+0
_0x27:
	LD   R26,Y
	LDD  R27,Y+1
	LD   R30,X
	CPI  R30,0
	BREQ _0x29
	LD   R26,X
	RCALL _UART_write
	LD   R30,Y
	LDD  R31,Y+1
	ADIW R30,1
	ST   Y,R30
	STD  Y+1,R31
	RJMP _0x27
_0x29:
	ADIW R28,2
	RET
; .FEND
;
;// -- Imagen 1 -- //
;flash unsigned char imagen1 [] = {
;0x54, 0x00, 0x30, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x3C, 0x3C, 0xEC, 0xFC, 0xB0, 0xF0, 0xB0, 0x30, 0x30, 0xB0, 0xB0, 0xB0, 0x30, 0xB0, 0xB0,
;0xEC, 0xEC, 0x3C, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x80, 0x80, 0xFF, 0xFF, 0xBA, 0xB8, 0x76, 0xFF, 0xFC, 0xFA, 0xFE, 0xFF, 0xFB,
;0xFF, 0xFF, 0xFF, 0xDB, 0xFE, 0xFD, 0xFF, 0xFF, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x9C, 0x9E, 0xFF, 0xFF, 0x3F, 0xBF, 0xBE, 0xFC, 0xEC, 0xEC, 0xEC, 0xEC, 0xEE,
;0xF8, 0xB8, 0xF8, 0xF8, 0xE0, 0xE0, 0xE0, 0xE0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xFF, 0x1F, 0xFD, 0xFA, 0xFF, 0xFF, 0xFD, 0xFF, 0xFF,
;0xFF, 0xDF, 0xDF, 0xDF, 0xFF, 0xE7, 0xFF, 0xFD, 0xFF, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x60, 0x60,
;0x60, 0x60, 0x98, 0x38, 0x98, 0x5E, 0xE6, 0xF7, 0x79, 0xFD, 0xFA, 0xF6, 0xF7, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0xFF, 0xFD, 0xFF, 0xFF, 0xFE, 0xFF, 0xFD, 0xFF, 0xFE, 0xFE,
;0xF8, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xF0, 0xFF, 0xDF, 0xFF, 0xFB, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x5F, 0x5F, 0x97, 0x49, 0xB9,
;0xA9, 0xAD, 0xAD, 0xEC, 0xF6, 0xD3, 0x93, 0xF3, 0xFD, 0xFD, 0xFF, 0xFF, 0xF7, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x3F, 0x0F, 0x0F,
;0x0F, 0x0F, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x3F, 0xFF, 0xFE, 0xFF,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xC0, 0xFE, 0xFE,
;0xF9, 0xFD, 0xBE, 0x7C, 0xFE, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x7F, 0x3F, 0x3F, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x03, 0x03,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x07,
;0x1F, 0x1F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F,
;0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x79, 0x79, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x07, 0x0F, 0x1F,
;0x1F, 0x1F, 0x1E, 0x1C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;};
;
;flash unsigned char imagen11 [] = {
;0x54, 0x00, 0x30, 0x00,
;0x00, 0x00, 0x00, 0x80, 0x80, 0x60, 0x60, 0x60, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
;0x60, 0x60, 0x80, 0x00, 0x00, 0xE0, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0,
;0x00, 0x00, 0x00, 0x00, 0xE0, 0x60, 0x60, 0x60, 0x60, 0x60, 0x00, 0x00, 0xE0, 0x80, 0x80, 0x00,
;0x00, 0x00, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0x60, 0x60, 0x60, 0x60, 0x00, 0x00, 0x80,
;0x80, 0x60, 0x60, 0x60, 0x80, 0x00, 0x00, 0x60, 0x60, 0x60, 0xE0, 0xE0, 0x60, 0x60, 0x60, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x7F, 0x80, 0x8C, 0x8C, 0xFC, 0xFC, 0x00, 0xE0,
;0xE0, 0x1C, 0x1C, 0x13, 0x10, 0x10, 0x1F, 0xE0, 0xE0, 0xFF, 0xFF, 0x00, 0x7F, 0x7F, 0x80, 0x7F,
;0x7F, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x8C, 0x8C, 0x8C, 0x80, 0x80, 0x00, 0x00,
;0xFF, 0x03, 0x03, 0x0C, 0x70, 0x70, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x8C, 0x8C, 0x8C,
;0x80, 0x00, 0x00, 0x63, 0x63, 0x8C, 0x8C, 0x8C, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01,
;0x01, 0x01, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x00,
;0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01,
;0x01, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x01,
;0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0x30, 0x30,
;0x30, 0x30, 0x30, 0xC0, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x30, 0x30, 0xC0, 0x00, 0x00, 0x00, 0x00,
;0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0xFF, 0xFF, 0x06, 0x06, 0x06, 0x06, 0x06, 0x01, 0xF0, 0xF0, 0x0E, 0x0E, 0x09, 0x08, 0x08, 0x0F,
;0xF0, 0xF0, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;};
;
;flash unsigned char imagen2 [] = {
;0x54, 0x00, 0x30, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x80, 0x80, 0x60, 0x60, 0xF8, 0xF8, 0xE0, 0xE0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x80, 0x80, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x18, 0x98,
;0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xFF, 0xFF, 0xE0, 0xF0, 0x9F, 0x9F, 0xFF, 0xFF, 0xFF, 0xFF,
;0xF8, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0,
;0xE0, 0xE0, 0xE0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x1F, 0x1F, 0x1B, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F,
;0x6F, 0x7F, 0x7B, 0x7F, 0x6F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x3F, 0x3F, 0xFF, 0xFC,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xEF, 0xFF, 0xFF, 0x7F, 0x6F, 0x7F, 0x7B, 0x7F, 0x6F, 0x7F, 0x1F,
;0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1B, 0x1F, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x07, 0x07,
;0xF8, 0xF8, 0xFF, 0xBF, 0xFF, 0xFF, 0x0F, 0x0F, 0x03, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0xC0, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0x0F, 0x0F, 0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x3F, 0x3F, 0x0F, 0x0F, 0x0F, 0x0F,
;0x0F, 0x0F, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;};
;
;flash unsigned char imagen3 [] = {
;0x54, 0x00, 0x30, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
;0x04, 0x04, 0x84, 0x84, 0xE4, 0xE4, 0xFC, 0xFC, 0xE4, 0xE4, 0x84, 0x84, 0x04, 0x04, 0x04, 0x04,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x80, 0x80, 0xE0, 0xE0, 0xFC, 0xF0, 0xF0, 0xF0, 0xFC, 0xF0, 0xE0, 0xE0, 0xF0, 0x98, 0x98,
;0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xFF, 0xE1, 0xC1, 0xC0, 0x7F, 0x7F, 0xC0, 0xC1, 0xE1, 0xFF,
;0xF8, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0x98, 0xE0, 0xE0, 0xE0, 0xF0, 0xFC, 0xF0, 0xF0, 0xFC,
;0xE0, 0xE0, 0xE0, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F,
;0x6F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF7, 0xE7, 0x80, 0x00, 0x00,
;0x80, 0xE7, 0xF7, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7F, 0x1F,
;0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x1F, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x07, 0x07,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x0F, 0x0F, 0x03, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0xC0, 0xC0, 0xC0, 0xC0, 0xFF, 0xFF, 0x0F, 0x0F, 0xFF, 0xFF, 0xC0, 0xC0, 0xC0, 0xC0, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x0F, 0x3F, 0x3F, 0x0F, 0x0F, 0x0F, 0x0F,
;0x0F, 0x0F, 0x0F, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;};
;
;flash unsigned char imagen4 [] = {
;0x54, 0x00, 0x30, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0xE0, 0xE0, 0xE0, 0xE0, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x80,
;0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0,
;0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0,
;0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7E, 0x7E, 0x7E, 0x7E, 0x7F, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x01,
;0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8,
;0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0x81, 0x81, 0x81, 0x81, 0x81, 0x81, 0x01, 0x01,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF,
;0xFF, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0xF8, 0xF8, 0xFF, 0xFF, 0xFF, 0xFF, 0x01, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x06, 0x06, 0x07, 0x07, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFE, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x0F, 0x7F, 0x7F, 0x7F, 0x7F, 0x7C, 0x7C, 0x7C, 0x7C, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
;0x00, 0x00, 0x00, 0xFC, 0xFC, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0xF0, 0xF0, 0xF0, 0xFF, 0xFF, 0xFF,
;0xFF, 0xFF, 0xFF, 0xF0, 0xF0, 0x00, 0x00, 0x00, 0x00, 0xF0, 0xF0, 0xF0, 0xF0, 0xF0, 0x00, 0x00,
;0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x7E, 0xFE, 0xFE, 0xFE, 0xFE, 0x80, 0x80, 0x80, 0x80, 0xFF, 0xFF, 0xFF,
;0xFF, 0x7F, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07,
;0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x7F, 0xFF,
;0xFF, 0xFF, 0x80, 0x80, 0x80, 0x80, 0xFF, 0xFF, 0xFF, 0xFF, 0x7F, 0x7F, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x07, 0x07,
;0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x07, 0x07, 0x07, 0x07, 0x07,
;0x07, 0x07, 0x07, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x01, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x07, 0x01, 0x01, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;};
;
;flash unsigned char imagen5 [] = {
;0x54, 0x00, 0x30, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xCE, 0xCE, 0x01, 0x01, 0x01, 0x01, 0x01,
;0x31, 0x31, 0x31, 0x31, 0x31, 0xB2, 0xB2, 0xB2, 0x00, 0x00, 0x00, 0x00, 0x00, 0xC0, 0xC0, 0x4E,
;0x4E, 0x4E, 0x43, 0x43, 0x4C, 0x4C, 0x4C, 0xC0, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF,
;0x02, 0x02, 0x02, 0x70, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x02, 0x02, 0xFF, 0xFF, 0x00,
;0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31, 0x31,
;0x31, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x06,
;0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x06, 0x01, 0x01, 0x01, 0x00, 0x00, 0x06, 0x06,
;0x06, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x06, 0x06, 0x06,
;0x00, 0x00, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x07, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x07, 0x07, 0x06, 0x06, 0x06, 0x06, 0x06,
;0x06, 0x06, 0x06, 0x06, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x80, 0x80, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x80, 0x80, 0x80,
;0x00, 0x00, 0x60, 0x60, 0x60, 0x80, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80,
;0x80, 0x60, 0x60, 0x60, 0x00, 0x00, 0xE0, 0xE0, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60,
;0x60, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 0xE0, 0xE0, 0xE0, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60,
;0x60, 0xE0, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x41, 0x41, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80, 0x80,
;0x80, 0x41, 0x41, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x03, 0x70, 0x70, 0x70, 0x80, 0x80,
;0x70, 0x70, 0x70, 0x03, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x8C, 0x8C, 0x8C, 0x8C,
;0x8C, 0x8C, 0x8C, 0x8C, 0x8C, 0x8C, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0x0C, 0x0C,
;0x0C, 0x0C, 0x0C, 0x3C, 0x3C, 0xCF, 0xCF, 0xCF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x01, 0x01,
;0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
;0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
;0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
;0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
;};
;
;// -- Inicilizacion Funcion ADC -- //
;// ADC Voltage Reference: AVCC pin
;#define ADC_VREF_TYPE ((0<<REFS1) | (1<<REFS0) | (0<<ADLAR))
;
;// Read the AD conversion result
;// Read Voltage=read_adc*(Vref/1024.0)
;unsigned int read_adc(unsigned char adc_input)
; 0000 00FC {
_read_adc:
; .FSTART _read_adc
; 0000 00FD     ADMUX=adc_input | ADC_VREF_TYPE;
	ST   -Y,R26
;	adc_input -> Y+0
	LD   R30,Y
	ORI  R30,0x40
	STS  124,R30
; 0000 00FE     // Delay needed for the stabilization of the ADC input voltage
; 0000 00FF     delay_us(10);
	__DELAY_USB 3
; 0000 0100     // Start the AD conversion
; 0000 0101     ADCSRA|=(1<<ADSC);
	LDS  R30,122
	ORI  R30,0x40
	STS  122,R30
; 0000 0102     // Wait for the AD conversion to complete
; 0000 0103     while ((ADCSRA & (1<<ADIF))==0);
_0x2A:
	LDS  R30,122
	ANDI R30,LOW(0x10)
	BREQ _0x2A
; 0000 0104     ADCSRA|=(1<<ADIF);
	LDS  R30,122
	ORI  R30,0x10
	STS  122,R30
; 0000 0105     return ADCW;
	LDS  R30,120
	LDS  R31,120+1
	JMP  _0x2120004
; 0000 0106 }
; .FEND
;
;// -- Variables adicionales -- //
;unsigned int voltDigitalX;
;unsigned int voltDigitalY;
;int dis1 = 0, dis2 = 0, dis3 = 0, dis4 = 0, i, juego1 = 0, play = 0, vidas = 4;

	.DSEG
;unsigned char dato;
;
;void main(void)
; 0000 010F {

	.CSEG
_main:
; .FSTART _main
; 0000 0110     // -- Configuracion Display LCD Nokia -- //
; 0000 0111     // Declare your local variables here
; 0000 0112     // Variable used to store graphic display
; 0000 0113     // controller initialization data
; 0000 0114     GLCDINIT_t glcd_init_data;
; 0000 0115 
; 0000 0116     // Specify the current font for displaying text
; 0000 0117     glcd_init_data.font=font5x7;
	SBIW R28,8
;	glcd_init_data -> Y+0
	LDI  R30,LOW(_font5x7*2)
	LDI  R31,HIGH(_font5x7*2)
	ST   Y,R30
	STD  Y+1,R31
; 0000 0118     // No function is used for reading
; 0000 0119     // image data from external memory
; 0000 011A     glcd_init_data.readxmem=NULL;
	LDI  R30,LOW(0)
	STD  Y+2,R30
	STD  Y+2+1,R30
; 0000 011B     // No function is used for writing
; 0000 011C     // image data to external memory
; 0000 011D     glcd_init_data.writexmem=NULL;
	STD  Y+4,R30
	STD  Y+4+1,R30
; 0000 011E     // Set the LCD temperature coefficient
; 0000 011F     glcd_init_data.temp_coef=PCD8544_DEFAULT_TEMP_COEF;
	LDD  R30,Y+6
	ANDI R30,LOW(0xFC)
	STD  Y+6,R30
; 0000 0120     // Set the LCD bias
; 0000 0121     glcd_init_data.bias=PCD8544_DEFAULT_BIAS;
	ANDI R30,LOW(0xE3)
	ORI  R30,LOW(0xC)
	STD  Y+6,R30
; 0000 0122     // Set the LCD contrast control voltage VLCD
; 0000 0123     glcd_init_data.vlcd=PCD8544_DEFAULT_VLCD;
	LDD  R30,Y+7
	ANDI R30,LOW(0x80)
	ORI  R30,LOW(0x32)
	STD  Y+7,R30
; 0000 0124 
; 0000 0125     glcd_init(&glcd_init_data);
	MOVW R26,R28
	RCALL _glcd_init
; 0000 0126     glcd_putimagef(0,0, imagen11, GLCD_PUTCOPY);
	CALL SUBOPT_0x0
	CALL SUBOPT_0x1
; 0000 0127     delay_ms(1000);
	LDI  R26,LOW(1000)
	LDI  R27,HIGH(1000)
	CALL _delay_ms
; 0000 0128     glcd_putimagef(0,0, imagen1, GLCD_PUTCOPY);
	CALL SUBOPT_0x0
	LDI  R30,LOW(_imagen1*2)
	LDI  R31,HIGH(_imagen1*2)
	CALL SUBOPT_0x2
; 0000 0129     delay_ms(5000);
; 0000 012A 
; 0000 012B     // -- Ajustes de ADC -- //
; 0000 012C     // ADC initialization
; 0000 012D     // ADC Clock frequency: 125.000 kHz
; 0000 012E     // ADC Voltage Reference: AVCC pin
; 0000 012F     // ADC Auto Trigger Source: ADC Stopped
; 0000 0130     // Digital input buffers on ADC0: Off, ADC1: Off, ADC2: On, ADC3: On
; 0000 0131     // ADC4: On, ADC5: On
; 0000 0132     DIDR0=(0<<ADC5D) | (0<<ADC4D) | (0<<ADC3D) | (0<<ADC2D) | (1<<ADC1D) | (1<<ADC0D);
	LDI  R30,LOW(3)
	STS  126,R30
; 0000 0133     ADMUX=ADC_VREF_TYPE;
	LDI  R30,LOW(64)
	STS  124,R30
; 0000 0134     ADCSRA=(1<<ADEN) | (0<<ADSC) | (0<<ADATE) | (0<<ADIF) | (0<<ADIE) | (0<<ADPS2) | (1<<ADPS1) | (1<<ADPS0);
	LDI  R30,LOW(131)
	STS  122,R30
; 0000 0135     ADCSRB=(0<<ADTS2) | (0<<ADTS1) | (0<<ADTS0);
	LDI  R30,LOW(0)
	STS  123,R30
; 0000 0136 
; 0000 0137      // USART initialization
; 0000 0138     // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0139     // USART Receiver: On
; 0000 013A     // USART Transmitter: On
; 0000 013B     // USART0 Mode: Asynchronous
; 0000 013C     // USART Baud Rate: 56000 (Double Speed Mode)
; 0000 013D     UCSR0A=(0<<RXC0) | (0<<TXC0) | (0<<UDRE0) | (0<<FE0) | (0<<DOR0) | (0<<UPE0) | (1<<U2X0) | (0<<MPCM0);
	LDI  R30,LOW(2)
	STS  192,R30
; 0000 013E     UCSR0B=(0<<RXCIE0) | (0<<TXCIE0) | (0<<UDRIE0) | (1<<RXEN0) | (1<<TXEN0) | (0<<UCSZ02) | (0<<RXB80) | (0<<TXB80);
	LDI  R30,LOW(24)
	STS  193,R30
; 0000 013F     UCSR0C=(0<<UMSEL01) | (0<<UMSEL00) | (0<<UPM01) | (0<<UPM00) | (0<<USBS0) | (1<<UCSZ01) | (1<<UCSZ00) | (0<<UCPOL0);
	LDI  R30,LOW(6)
	STS  194,R30
; 0000 0140     UBRR0H=0x00;
	LDI  R30,LOW(0)
	STS  197,R30
; 0000 0141     UBRR0L=0x11;
	LDI  R30,LOW(17)
	STS  196,R30
; 0000 0142 
; 0000 0143     // Coonfiguracion CTC 8MHz
; 0000 0144     CLKPR=0X80;
	LDI  R30,LOW(128)
	STS  97,R30
; 0000 0145     CLKPR=0;
	LDI  R30,LOW(0)
	STS  97,R30
; 0000 0146 
; 0000 0147     // -- Definicion de Inputs digitales -- //
; 0000 0148     PORTC.5 = 1;
	SBI  0x8,5
; 0000 0149     PORTC.4 = 1;
	SBI  0x8,4
; 0000 014A     PORTC.3 = 1;
	SBI  0x8,3
; 0000 014B     PORTC.2 = 1;
	SBI  0x8,2
; 0000 014C 
; 0000 014D     // -- Definicion de Outputs  -- //
; 0000 014E     DDRD.7 = 1;
	SBI  0xA,7
; 0000 014F     DDRD.6 = 1;
	SBI  0xA,6
; 0000 0150     DDRB.2 = 1;
	SBI  0x4,2
; 0000 0151     DDRB.0 = 1;
	SBI  0x4,0
; 0000 0152     DDRD.5 = 1;
	SBI  0xA,5
; 0000 0153 
; 0000 0154     while (1)
_0x40:
; 0000 0155     {
; 0000 0156         // -- Operacion de LCD Nokia -- //
; 0000 0157         if(juego1 == 0){
	LDS  R30,_juego1
	LDS  R31,_juego1+1
	SBIW R30,0
	BRNE _0x43
; 0000 0158             glcd_putimagef(0,0, imagen11, GLCD_PUTCOPY);
	CALL SUBOPT_0x0
	CALL SUBOPT_0x1
; 0000 0159         }
; 0000 015A         // -- lectrua eje x del joystick -- //
; 0000 015B         voltDigitalX = read_adc(0);
_0x43:
	LDI  R26,LOW(0)
	RCALL _read_adc
	STS  _voltDigitalX,R30
	STS  _voltDigitalX+1,R31
; 0000 015C 
; 0000 015D 
; 0000 015E         // -- Lectrua eje y del joystick -- //
; 0000 015F         voltDigitalY = read_adc(1);
	LDI  R26,LOW(1)
	RCALL _read_adc
	STS  _voltDigitalY,R30
	STS  _voltDigitalY+1,R31
; 0000 0160 
; 0000 0161         // -- Movimiento por joystick -- //
; 0000 0162         if (voltDigitalX<300){
	LDS  R26,_voltDigitalX
	LDS  R27,_voltDigitalX+1
	CPI  R26,LOW(0x12C)
	LDI  R30,HIGH(0x12C)
	CPC  R27,R30
	BRSH _0x44
; 0000 0163             UART_write_txt("I");
	__POINTW2MN _0x45,0
	RCALL _UART_write_txt
; 0000 0164             UART_write_txt("\n\r");
	__POINTW2MN _0x45,2
	RJMP _0xAF
; 0000 0165         }
; 0000 0166         else if(voltDigitalX>700){
_0x44:
	LDS  R26,_voltDigitalX
	LDS  R27,_voltDigitalX+1
	CPI  R26,LOW(0x2BD)
	LDI  R30,HIGH(0x2BD)
	CPC  R27,R30
	BRLO _0x47
; 0000 0167             UART_write_txt("D");
	__POINTW2MN _0x45,5
	RCALL _UART_write_txt
; 0000 0168             UART_write_txt("\n\r");
	__POINTW2MN _0x45,7
_0xAF:
	RCALL _UART_write_txt
; 0000 0169         }
; 0000 016A 
; 0000 016B         if (voltDigitalY<300){
_0x47:
	LDS  R26,_voltDigitalY
	LDS  R27,_voltDigitalY+1
	CPI  R26,LOW(0x12C)
	LDI  R30,HIGH(0x12C)
	CPC  R27,R30
	BRSH _0x48
; 0000 016C             UART_write_txt("a");
	__POINTW2MN _0x45,10
	RCALL _UART_write_txt
; 0000 016D             UART_write_txt("\n\r");
	__POINTW2MN _0x45,12
	RJMP _0xB0
; 0000 016E         }
; 0000 016F         else if(voltDigitalY>700){
_0x48:
	LDS  R26,_voltDigitalY
	LDS  R27,_voltDigitalY+1
	CPI  R26,LOW(0x2BD)
	LDI  R30,HIGH(0x2BD)
	CPC  R27,R30
	BRLO _0x4A
; 0000 0170             UART_write_txt("A");
	__POINTW2MN _0x45,15
	RCALL _UART_write_txt
; 0000 0171             UART_write_txt("\n\r");
	__POINTW2MN _0x45,17
_0xB0:
	RCALL _UART_write_txt
; 0000 0172         }
; 0000 0173 
; 0000 0174         // -- Lectura Serial -- //
; 0000 0175         if ((UCSR0A&0x80)!=0) //Instruccion que nos dice si hay un caracter listo
_0x4A:
	LDS  R30,192
	ANDI R30,LOW(0x80)
	BRNE PC+2
	RJMP _0x4B
; 0000 0176                               // para leerse (bandera ?receive complete?)
; 0000 0177         {
; 0000 0178             dato=UART_read();       //Lee caracter del Puerto serie
	RCALL _UART_read
	STS  _dato,R30
; 0000 0179                                   // Codigo para procesar el caracter recibido
; 0000 017A             if((dato >= '1') && (dato <= '4')){
	LDS  R26,_dato
	CPI  R26,LOW(0x31)
	BRLO _0x4D
	CPI  R26,LOW(0x35)
	BRLO _0x4E
_0x4D:
	RJMP _0x4C
_0x4E:
; 0000 017B                 switch(dato){
	LDS  R30,_dato
	LDI  R31,0
; 0000 017C                     case '1':
	CPI  R30,LOW(0x31)
	LDI  R26,HIGH(0x31)
	CPC  R31,R26
	BRNE _0x52
; 0000 017D                         if (dis1 == 0){
	LDS  R30,_dis1
	LDS  R31,_dis1+1
	SBIW R30,0
	BRNE _0x53
; 0000 017E                             UART_write_txt("LED1 encendido\n\r");
	__POINTW2MN _0x45,20
	RCALL _UART_write_txt
; 0000 017F                             PORTB.0 = 1;
	SBI  0x5,0
; 0000 0180                             dis1 = 1;
	LDI  R30,LOW(1)
	LDI  R31,HIGH(1)
	STS  _dis1,R30
	STS  _dis1+1,R31
; 0000 0181                         }
; 0000 0182                         else{
	RJMP _0x56
_0x53:
; 0000 0183                             UART_write_txt("LED1 Apagado\n\r");
	__POINTW2MN _0x45,37
	RCALL _UART_write_txt
; 0000 0184                             dis1 = 0;
	LDI  R30,LOW(0)
	STS  _dis1,R30
	STS  _dis1+1,R30
; 0000 0185                             PORTB.0 = 0;
	CBI  0x5,0
; 0000 0186                         }
_0x56:
; 0000 0187                         printf("\n\r");
	RJMP _0xB1
; 0000 0188                         break;
; 0000 0189                     case '2':
_0x52:
	CPI  R30,LOW(0x32)
	LDI  R26,HIGH(0x32)
	CPC  R31,R26
	BRNE _0x59
; 0000 018A                         if (dis2 == 0){
	LDS  R30,_dis2
	LDS  R31,_dis2+1
	SBIW R30,0
	BRNE _0x5A
; 0000 018B                             UART_write_txt("LED2 encendido\n\r");
	__POINTW2MN _0x45,52
	RCALL _UART_write_txt
; 0000 018C                             PORTB.2 = 1;
	SBI  0x5,2
; 0000 018D                             dis2 = 1;
	LDI  R30,LOW(1)
	LDI  R31,HIGH(1)
	STS  _dis2,R30
	STS  _dis2+1,R31
; 0000 018E                         }
; 0000 018F                         else{
	RJMP _0x5D
_0x5A:
; 0000 0190                             UART_write_txt("LED2 apagado\n\r");
	__POINTW2MN _0x45,69
	RCALL _UART_write_txt
; 0000 0191                             dis2 = 0;
	LDI  R30,LOW(0)
	STS  _dis2,R30
	STS  _dis2+1,R30
; 0000 0192                             PORTB.2 = 0;
	CBI  0x5,2
; 0000 0193                         }
_0x5D:
; 0000 0194                         printf("\n\r");
	RJMP _0xB1
; 0000 0195                         break;
; 0000 0196                     case '3':
_0x59:
	CPI  R30,LOW(0x33)
	LDI  R26,HIGH(0x33)
	CPC  R31,R26
	BRNE _0x60
; 0000 0197                         if (dis3 == 0){
	LDS  R30,_dis3
	LDS  R31,_dis3+1
	SBIW R30,0
	BRNE _0x61
; 0000 0198                             UART_write_txt("LED3 encendido\n\r");
	__POINTW2MN _0x45,84
	RCALL _UART_write_txt
; 0000 0199                             PORTD.6 = 1;
	SBI  0xB,6
; 0000 019A                             dis3 = 1;
	LDI  R30,LOW(1)
	LDI  R31,HIGH(1)
	STS  _dis3,R30
	STS  _dis3+1,R31
; 0000 019B                         }
; 0000 019C                         else{
	RJMP _0x64
_0x61:
; 0000 019D                             UART_write_txt("LED3 apagado\n\r");
	__POINTW2MN _0x45,101
	RCALL _UART_write_txt
; 0000 019E                             dis3 = 0;
	LDI  R30,LOW(0)
	STS  _dis3,R30
	STS  _dis3+1,R30
; 0000 019F                             PORTD.6 = 0;
	CBI  0xB,6
; 0000 01A0                         }
_0x64:
; 0000 01A1                         printf("\n\r");
	RJMP _0xB1
; 0000 01A2                         break;
; 0000 01A3                     case '4':
_0x60:
	CPI  R30,LOW(0x34)
	LDI  R26,HIGH(0x34)
	CPC  R31,R26
	BRNE _0x51
; 0000 01A4                         if (dis4 == 0){
	LDS  R30,_dis4
	LDS  R31,_dis4+1
	SBIW R30,0
	BRNE _0x68
; 0000 01A5                             UART_write_txt("LED4 encendido\n\r");
	__POINTW2MN _0x45,116
	RCALL _UART_write_txt
; 0000 01A6                             PORTD.7 = 1;
	SBI  0xB,7
; 0000 01A7                             dis4 = 1;
	LDI  R30,LOW(1)
	LDI  R31,HIGH(1)
	STS  _dis4,R30
	STS  _dis4+1,R31
; 0000 01A8                         }
; 0000 01A9                         else{
	RJMP _0x6B
_0x68:
; 0000 01AA                             UART_write_txt("LED4 apagado\n\r");
	__POINTW2MN _0x45,133
	RCALL _UART_write_txt
; 0000 01AB                             dis4 = 0;
	LDI  R30,LOW(0)
	STS  _dis4,R30
	STS  _dis4+1,R30
; 0000 01AC                             PORTD.7 = 0;
	CBI  0xB,7
; 0000 01AD                         }
_0x6B:
; 0000 01AE                         printf("\n\r");
_0xB1:
	__POINTW1FN _0x0,2
	CALL SUBOPT_0x3
; 0000 01AF                         break;
; 0000 01B0                 }
_0x51:
; 0000 01B1             }
; 0000 01B2             else if(dato == 'O'){
	RJMP _0x6E
_0x4C:
	LDS  R26,_dato
	CPI  R26,LOW(0x4F)
	BRNE _0x6F
; 0000 01B3                 juego1 = 0;
	LDI  R30,LOW(0)
	STS  _juego1,R30
	STS  _juego1+1,R30
; 0000 01B4                 vidas = 4;
	LDI  R30,LOW(4)
	LDI  R31,HIGH(4)
	STS  _vidas,R30
	STS  _vidas+1,R31
; 0000 01B5                 PORTB.0 = 0;
	CBI  0x5,0
; 0000 01B6                 PORTB.2 = 0;
	CBI  0x5,2
; 0000 01B7                 PORTD.6 = 0;
	CBI  0xB,6
; 0000 01B8                 PORTD.7 = 0;
	CBI  0xB,7
; 0000 01B9                 printf("\n\r");
	__POINTW1FN _0x0,2
	CALL SUBOPT_0x3
; 0000 01BA                 for (i = 0; i < 3; i++)
	LDI  R30,LOW(0)
	STS  _i,R30
	STS  _i+1,R30
_0x79:
	LDS  R26,_i
	LDS  R27,_i+1
	SBIW R26,3
	BRGE _0x7A
; 0000 01BB                 {
; 0000 01BC                     glcd_putimagef(0,0, imagen5, GLCD_PUTCOPY);
	CALL SUBOPT_0x0
	LDI  R30,LOW(_imagen5*2)
	LDI  R31,HIGH(_imagen5*2)
	CALL SUBOPT_0x2
; 0000 01BD                     delay_ms(5000);
; 0000 01BE                     glcd_clear();
	RCALL _glcd_clear
; 0000 01BF                     delay_ms(5000);
	LDI  R26,LOW(5000)
	LDI  R27,HIGH(5000)
	CALL _delay_ms
; 0000 01C0                 }
	LDI  R26,LOW(_i)
	LDI  R27,HIGH(_i)
	CALL SUBOPT_0x4
	RJMP _0x79
_0x7A:
; 0000 01C1             }
; 0000 01C2             if (dato == 'M'){
_0x6F:
_0x6E:
	LDS  R26,_dato
	CPI  R26,LOW(0x4D)
	BRNE _0x7B
; 0000 01C3                 PORTD.5 = 1;
	SBI  0xB,5
; 0000 01C4                 delay_ms(5000);
	LDI  R26,LOW(5000)
	LDI  R27,HIGH(5000)
	CALL _delay_ms
; 0000 01C5                 PORTD.5 = 0;
	CBI  0xB,5
; 0000 01C6                 vidas--;
	LDI  R26,LOW(_vidas)
	LDI  R27,HIGH(_vidas)
	LD   R30,X+
	LD   R31,X+
	SBIW R30,1
	ST   -X,R31
	ST   -X,R30
; 0000 01C7             }
; 0000 01C8 
; 0000 01C9             else{
	RJMP _0x80
_0x7B:
; 0000 01CA                 printf("\n\r");
	__POINTW1FN _0x0,2
	CALL SUBOPT_0x3
; 0000 01CB             }
_0x80:
; 0000 01CC         }
; 0000 01CD         if(juego1 == 1){
_0x4B:
	LDS  R26,_juego1
	LDS  R27,_juego1+1
	SBIW R26,1
	BREQ PC+2
	RJMP _0x81
; 0000 01CE             if (play == 1 && vidas == 4){
	LDS  R26,_play
	LDS  R27,_play+1
	SBIW R26,1
	BRNE _0x83
	LDS  R26,_vidas
	LDS  R27,_vidas+1
	SBIW R26,4
	BREQ _0x84
_0x83:
	RJMP _0x82
_0x84:
; 0000 01CF                 glcd_putimagef(0,0, imagen4, GLCD_PUTCOPY);
	CALL SUBOPT_0x0
	LDI  R30,LOW(_imagen4*2)
	LDI  R31,HIGH(_imagen4*2)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _glcd_putimagef
; 0000 01D0                 PORTB.0 = 1;
	SBI  0x5,0
; 0000 01D1                 delay_ms(3000);
	CALL SUBOPT_0x5
; 0000 01D2                 PORTB.2 = 1;
	SBI  0x5,2
; 0000 01D3                 delay_ms(3000);
	CALL SUBOPT_0x5
; 0000 01D4                 PORTD.6 = 1;
	SBI  0xB,6
; 0000 01D5                 delay_ms(3000);
	CALL SUBOPT_0x5
; 0000 01D6                 PORTD.7 = 1;
	SBI  0xB,7
; 0000 01D7                 delay_ms(3000);
	CALL SUBOPT_0x5
; 0000 01D8                 play = 0;
	LDI  R30,LOW(0)
	STS  _play,R30
	STS  _play+1,R30
; 0000 01D9             }
; 0000 01DA             glcd_putimagef(0,0, imagen2, GLCD_PUTCOPY);
_0x82:
	CALL SUBOPT_0x0
	LDI  R30,LOW(_imagen2*2)
	LDI  R31,HIGH(_imagen2*2)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _glcd_putimagef
; 0000 01DB             // Sin animacion
; 0000 01DC             //delay_ms(3000);
; 0000 01DD             //glcd_putimagef(0,0, imagen3, GLCD_PUTCOPY);
; 0000 01DE             //delay_ms(3000);
; 0000 01DF             switch (vidas){
	LDS  R30,_vidas
	LDS  R31,_vidas+1
; 0000 01E0             case 3:
	CPI  R30,LOW(0x3)
	LDI  R26,HIGH(0x3)
	CPC  R31,R26
	BRNE _0x90
; 0000 01E1                 PORTD.7 = 0;
	CBI  0xB,7
; 0000 01E2                 break;
	RJMP _0x8F
; 0000 01E3             case 2:
_0x90:
	CPI  R30,LOW(0x2)
	LDI  R26,HIGH(0x2)
	CPC  R31,R26
	BRNE _0x93
; 0000 01E4                 PORTD.6 = 0;
	CBI  0xB,6
; 0000 01E5                 break;
	RJMP _0x8F
; 0000 01E6             case 1:
_0x93:
	CPI  R30,LOW(0x1)
	LDI  R26,HIGH(0x1)
	CPC  R31,R26
	BRNE _0x96
; 0000 01E7                 PORTB.2 = 0;
	CBI  0x5,2
; 0000 01E8                 break;
	RJMP _0x8F
; 0000 01E9             case 0:
_0x96:
	SBIW R30,0
	BRNE _0x9C
; 0000 01EA                 PORTB.0 = 0;
	CBI  0x5,0
; 0000 01EB                 break;
; 0000 01EC             default:
_0x9C:
; 0000 01ED                 break;
; 0000 01EE             }
_0x8F:
; 0000 01EF         }
; 0000 01F0         // -- Transmision Serial -- //
; 0000 01F1         if (PINC.5 == 0){
_0x81:
	SBIC 0x6,5
	RJMP _0x9D
; 0000 01F2             UART_write_txt("Str\n\r");
	__POINTW2MN _0x45,148
	RCALL _UART_write_txt
; 0000 01F3             play = 1;
	LDI  R30,LOW(1)
	LDI  R31,HIGH(1)
	STS  _play,R30
	STS  _play+1,R31
; 0000 01F4             juego1 = 1;
	STS  _juego1,R30
	STS  _juego1+1,R31
; 0000 01F5         }while (PINC.5 == 0);
_0x9D:
_0x9E:
	SBIS 0x6,5
	RJMP _0x9E
; 0000 01F6         if (PINC.4 == 0){
	SBIC 0x6,4
	RJMP _0xA1
; 0000 01F7             UART_write_txt("Esc\n\r");
	__POINTW2MN _0x45,154
	RCALL _UART_write_txt
; 0000 01F8         }while (PINC.4 == 0);
_0xA1:
_0xA2:
	SBIS 0x6,4
	RJMP _0xA2
; 0000 01F9         if (PINC.3 == 0){
	SBIC 0x6,3
	RJMP _0xA5
; 0000 01FA             UART_write_txt("Jmp\n\r");
	__POINTW2MN _0x45,160
	RCALL _UART_write_txt
; 0000 01FB         }while (PINC.3 == 0);
_0xA5:
_0xA6:
	SBIS 0x6,3
	RJMP _0xA6
; 0000 01FC         if (PINC.2 == 0){
	SBIC 0x6,2
	RJMP _0xA9
; 0000 01FD             UART_write_txt("Sho\n\r");
	__POINTW2MN _0x45,166
	RCALL _UART_write_txt
; 0000 01FE         }while (PINC.2 == 0);
_0xA9:
_0xAA:
	SBIS 0x6,2
	RJMP _0xAA
; 0000 01FF     }
	RJMP _0x40
; 0000 0200 }
_0xAD:
	RJMP _0xAD
; .FEND

	.DSEG
_0x45:
	.BYTE 0xAC
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x01
	.EQU __sm_mask=0x0E
	.EQU __sm_adc_noise_red=0x02
	.EQU __sm_powerdown=0x04
	.EQU __sm_powersave=0x06
	.EQU __sm_standby=0x0C
	.EQU __sm_ext_standby=0x0E
	.SET power_ctrl_reg=smcr
	#endif

	.CSEG
_pcd8544_delay_G100:
; .FSTART _pcd8544_delay_G100
	RET
; .FEND
_pcd8544_wrbus_G100:
; .FSTART _pcd8544_wrbus_G100
	ST   -Y,R26
	ST   -Y,R16
	CBI  0xB,2
	LDI  R16,LOW(8)
_0x2000004:
	RCALL _pcd8544_delay_G100
	LDD  R30,Y+1
	ANDI R30,LOW(0x80)
	BREQ _0x2000006
	SBI  0x5,3
	RJMP _0x2000007
_0x2000006:
	CBI  0x5,3
_0x2000007:
	LDD  R30,Y+1
	LSL  R30
	STD  Y+1,R30
	RCALL _pcd8544_delay_G100
	SBI  0x5,5
	RCALL _pcd8544_delay_G100
	CBI  0x5,5
	SUBI R16,LOW(1)
	BRNE _0x2000004
	SBI  0xB,2
	LDD  R16,Y+0
	JMP  _0x2120002
; .FEND
_pcd8544_wrcmd:
; .FSTART _pcd8544_wrcmd
	ST   -Y,R26
	CBI  0xB,4
	LD   R26,Y
	RCALL _pcd8544_wrbus_G100
	JMP  _0x2120004
; .FEND
_pcd8544_wrdata_G100:
; .FSTART _pcd8544_wrdata_G100
	ST   -Y,R26
	SBI  0xB,4
	LD   R26,Y
	RCALL _pcd8544_wrbus_G100
	JMP  _0x2120004
; .FEND
_pcd8544_setaddr_G100:
; .FSTART _pcd8544_setaddr_G100
	ST   -Y,R26
	ST   -Y,R16
	LDD  R30,Y+1
	LSR  R30
	LSR  R30
	LSR  R30
	MOV  R16,R30
	LDI  R30,LOW(84)
	MUL  R30,R16
	MOVW R30,R0
	MOVW R26,R30
	LDD  R30,Y+2
	LDI  R31,0
	ADD  R30,R26
	ADC  R31,R27
	STS  _gfx_addr_G100,R30
	STS  _gfx_addr_G100+1,R31
	MOV  R30,R16
	LDD  R16,Y+0
	JMP  _0x2120001
; .FEND
_pcd8544_gotoxy:
; .FSTART _pcd8544_gotoxy
	ST   -Y,R26
	LDD  R30,Y+1
	ORI  R30,0x80
	MOV  R26,R30
	RCALL _pcd8544_wrcmd
	LDD  R30,Y+1
	ST   -Y,R30
	LDD  R26,Y+1
	RCALL _pcd8544_setaddr_G100
	ORI  R30,0x40
	MOV  R26,R30
	RCALL _pcd8544_wrcmd
	JMP  _0x2120002
; .FEND
_pcd8544_rdbyte:
; .FSTART _pcd8544_rdbyte
	ST   -Y,R26
	LDD  R30,Y+1
	ST   -Y,R30
	LDD  R26,Y+1
	RCALL _pcd8544_gotoxy
	LDS  R30,_gfx_addr_G100
	LDS  R31,_gfx_addr_G100+1
	SUBI R30,LOW(-_gfx_buffer_G100)
	SBCI R31,HIGH(-_gfx_buffer_G100)
	LD   R30,Z
	JMP  _0x2120002
; .FEND
_pcd8544_wrbyte:
; .FSTART _pcd8544_wrbyte
	ST   -Y,R26
	CALL SUBOPT_0x6
	SBIW R30,1
	SUBI R30,LOW(-_gfx_buffer_G100)
	SBCI R31,HIGH(-_gfx_buffer_G100)
	LD   R26,Y
	STD  Z+0,R26
	RCALL _pcd8544_wrdata_G100
	JMP  _0x2120004
; .FEND
_glcd_init:
; .FSTART _glcd_init
	ST   -Y,R27
	ST   -Y,R26
	CALL __SAVELOCR3
	SBI  0xA,2
	SBI  0xB,2
	SBI  0x4,5
	CBI  0x5,5
	SBI  0x4,3
	SBI  0xA,4
	SBI  0xA,3
	CBI  0xB,3
	LDI  R26,LOW(10)
	LDI  R27,0
	CALL _delay_ms
	SBI  0xB,3
	LDD  R30,Y+3
	LDD  R31,Y+3+1
	SBIW R30,0
	BREQ _0x2000008
	LDD  R30,Z+6
	ANDI R30,LOW(0x3)
	MOV  R16,R30
	LDD  R30,Y+3
	LDD  R31,Y+3+1
	LDD  R30,Z+6
	LSR  R30
	LSR  R30
	ANDI R30,LOW(0x7)
	MOV  R17,R30
	LDD  R30,Y+3
	LDD  R31,Y+3+1
	LDD  R30,Z+7
	ANDI R30,0x7F
	MOV  R18,R30
	LDD  R26,Y+3
	LDD  R27,Y+3+1
	CALL __GETW1P
	__PUTW1MN _glcd_state,4
	ADIW R26,2
	CALL __GETW1P
	__PUTW1MN _glcd_state,25
	LDD  R26,Y+3
	LDD  R27,Y+3+1
	ADIW R26,4
	CALL __GETW1P
	RJMP _0x20000A0
_0x2000008:
	LDI  R16,LOW(0)
	LDI  R17,LOW(3)
	LDI  R18,LOW(50)
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	__PUTW1MN _glcd_state,4
	__PUTW1MN _glcd_state,25
_0x20000A0:
	__PUTW1MN _glcd_state,27
	LDI  R26,LOW(33)
	RCALL _pcd8544_wrcmd
	MOV  R30,R16
	ORI  R30,4
	MOV  R26,R30
	RCALL _pcd8544_wrcmd
	MOV  R30,R17
	ORI  R30,0x10
	MOV  R26,R30
	RCALL _pcd8544_wrcmd
	MOV  R30,R18
	ORI  R30,0x80
	MOV  R26,R30
	RCALL _pcd8544_wrcmd
	LDI  R26,LOW(32)
	RCALL _pcd8544_wrcmd
	LDI  R26,LOW(1)
	RCALL _glcd_display
	LDI  R30,LOW(1)
	STS  _glcd_state,R30
	LDI  R30,LOW(0)
	__PUTB1MN _glcd_state,1
	LDI  R30,LOW(1)
	__PUTB1MN _glcd_state,6
	__PUTB1MN _glcd_state,7
	__PUTB1MN _glcd_state,8
	LDI  R30,LOW(255)
	__PUTB1MN _glcd_state,9
	LDI  R30,LOW(1)
	__PUTB1MN _glcd_state,16
	__POINTW1MN _glcd_state,17
	ST   -Y,R31
	ST   -Y,R30
	LDI  R30,LOW(255)
	ST   -Y,R30
	LDI  R26,LOW(8)
	LDI  R27,0
	CALL _memset
	RCALL _glcd_clear
	LDI  R30,LOW(1)
	CALL __LOADLOCR3
	JMP  _0x2120003
; .FEND
_glcd_display:
; .FSTART _glcd_display
	ST   -Y,R26
	LD   R30,Y
	CPI  R30,0
	BREQ _0x200000A
	LDI  R30,LOW(12)
	RJMP _0x200000B
_0x200000A:
	LDI  R30,LOW(8)
_0x200000B:
	MOV  R26,R30
	RCALL _pcd8544_wrcmd
	RJMP _0x2120004
; .FEND
_glcd_clear:
; .FSTART _glcd_clear
	CALL __SAVELOCR3
	LDI  R18,0
	__GETB1MN _glcd_state,1
	CPI  R30,0
	BREQ _0x200000D
	LDI  R18,LOW(255)
_0x200000D:
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(0)
	RCALL _pcd8544_gotoxy
	__GETWRN 16,17,504
_0x200000E:
	MOVW R30,R16
	__SUBWRN 16,17,1
	SBIW R30,0
	BREQ _0x2000010
	MOV  R26,R18
	RCALL _pcd8544_wrbyte
	RJMP _0x200000E
_0x2000010:
	LDI  R30,LOW(0)
	ST   -Y,R30
	LDI  R26,LOW(0)
	RCALL _glcd_moveto
	CALL __LOADLOCR3
	JMP  _0x2120001
; .FEND
_pcd8544_wrmasked_G100:
; .FSTART _pcd8544_wrmasked_G100
	ST   -Y,R26
	ST   -Y,R16
	LDD  R30,Y+5
	ST   -Y,R30
	LDD  R26,Y+5
	RCALL _pcd8544_rdbyte
	MOV  R16,R30
	LDD  R30,Y+1
	CPI  R30,LOW(0x7)
	BREQ _0x2000020
	CPI  R30,LOW(0x8)
	BRNE _0x2000021
_0x2000020:
	LDD  R30,Y+3
	ST   -Y,R30
	LDD  R26,Y+2
	CALL _glcd_mappixcolor1bit
	STD  Y+3,R30
	RJMP _0x2000022
_0x2000021:
	CPI  R30,LOW(0x3)
	BRNE _0x2000024
	LDD  R30,Y+3
	COM  R30
	STD  Y+3,R30
	RJMP _0x2000025
_0x2000024:
	CPI  R30,0
	BRNE _0x2000026
_0x2000025:
_0x2000022:
	LDD  R30,Y+2
	COM  R30
	AND  R16,R30
	RJMP _0x2000027
_0x2000026:
	CPI  R30,LOW(0x2)
	BRNE _0x2000028
_0x2000027:
	LDD  R30,Y+2
	LDD  R26,Y+3
	AND  R30,R26
	OR   R16,R30
	RJMP _0x200001E
_0x2000028:
	CPI  R30,LOW(0x1)
	BRNE _0x2000029
	LDD  R30,Y+2
	LDD  R26,Y+3
	AND  R30,R26
	EOR  R16,R30
	RJMP _0x200001E
_0x2000029:
	CPI  R30,LOW(0x4)
	BRNE _0x200001E
	LDD  R30,Y+2
	COM  R30
	LDD  R26,Y+3
	OR   R30,R26
	AND  R16,R30
_0x200001E:
	MOV  R26,R16
	RCALL _pcd8544_wrbyte
	LDD  R16,Y+0
	ADIW R28,6
	RET
; .FEND
_glcd_block:
; .FSTART _glcd_block
	ST   -Y,R26
	SBIW R28,3
	CALL __SAVELOCR6
	LDD  R26,Y+16
	CPI  R26,LOW(0x54)
	BRSH _0x200002C
	LDD  R26,Y+15
	CPI  R26,LOW(0x30)
	BRSH _0x200002C
	LDD  R26,Y+14
	CPI  R26,LOW(0x0)
	BREQ _0x200002C
	LDD  R26,Y+13
	CPI  R26,LOW(0x0)
	BRNE _0x200002B
_0x200002C:
	RJMP _0x2120007
_0x200002B:
	LDD  R30,Y+14
	STD  Y+8,R30
	LDD  R26,Y+16
	CLR  R27
	LDD  R30,Y+14
	LDI  R31,0
	ADD  R26,R30
	ADC  R27,R31
	CPI  R26,LOW(0x55)
	LDI  R30,HIGH(0x55)
	CPC  R27,R30
	BRLO _0x200002E
	LDD  R26,Y+16
	LDI  R30,LOW(84)
	SUB  R30,R26
	STD  Y+14,R30
_0x200002E:
	LDD  R19,Y+13
	LDD  R26,Y+15
	CLR  R27
	LDD  R30,Y+13
	LDI  R31,0
	ADD  R26,R30
	ADC  R27,R31
	SBIW R26,49
	BRLO _0x200002F
	LDD  R26,Y+15
	LDI  R30,LOW(48)
	SUB  R30,R26
	STD  Y+13,R30
_0x200002F:
	LDD  R26,Y+9
	CPI  R26,LOW(0x6)
	BREQ PC+2
	RJMP _0x2000030
	LDD  R30,Y+12
	CPI  R30,LOW(0x1)
	BRNE _0x2000034
	RJMP _0x2120007
_0x2000034:
	CPI  R30,LOW(0x3)
	BRNE _0x2000037
	__GETW1MN _glcd_state,27
	SBIW R30,0
	BRNE _0x2000036
	RJMP _0x2120007
_0x2000036:
_0x2000037:
	LDD  R17,Y+8
	LDD  R30,Y+13
	LSR  R30
	LSR  R30
	LSR  R30
	MOV  R18,R30
	MOV  R30,R19
	ANDI R30,LOW(0x7)
	BRNE _0x2000039
	LDD  R26,Y+13
	CP   R19,R26
	BREQ _0x2000038
_0x2000039:
	MOV  R26,R17
	CLR  R27
	MOV  R30,R18
	LDI  R31,0
	CALL __MULW12U
	LDD  R26,Y+10
	LDD  R27,Y+10+1
	CALL SUBOPT_0x7
	LSR  R19
	LSR  R19
	LSR  R19
	MOV  R20,R18
_0x200003B:
	PUSH R20
	SUBI R20,-1
	MOV  R30,R19
	POP  R26
	CP   R30,R26
	BRLO _0x200003D
	MOV  R16,R17
_0x200003E:
	MOV  R30,R16
	SUBI R16,1
	CPI  R30,0
	BREQ _0x2000040
	CALL SUBOPT_0x8
	RJMP _0x200003E
_0x2000040:
	RJMP _0x200003B
_0x200003D:
_0x2000038:
	LDD  R26,Y+14
	CP   R17,R26
	BREQ _0x2000041
	LDD  R30,Y+14
	LDD  R26,Y+10
	LDD  R27,Y+10+1
	LDI  R31,0
	CALL SUBOPT_0x7
	LDD  R30,Y+13
	ANDI R30,LOW(0x7)
	BREQ _0x2000042
	SUBI R18,-LOW(1)
_0x2000042:
	LDI  R19,LOW(0)
_0x2000043:
	PUSH R19
	SUBI R19,-1
	MOV  R30,R18
	POP  R26
	CP   R26,R30
	BRSH _0x2000045
	LDD  R16,Y+14
_0x2000046:
	PUSH R16
	SUBI R16,-1
	MOV  R30,R17
	POP  R26
	CP   R26,R30
	BRSH _0x2000048
	CALL SUBOPT_0x8
	RJMP _0x2000046
_0x2000048:
	LDD  R30,Y+14
	LDD  R26,Y+6
	LDD  R27,Y+6+1
	LDI  R31,0
	CALL SUBOPT_0x7
	RJMP _0x2000043
_0x2000045:
_0x2000041:
_0x2000030:
	LDD  R30,Y+15
	ANDI R30,LOW(0x7)
	MOV  R18,R30
_0x2000049:
	LDD  R30,Y+13
	CPI  R30,0
	BRNE PC+2
	RJMP _0x200004B
	LDD  R30,Y+10
	LDD  R31,Y+10+1
	STD  Y+6,R30
	STD  Y+6+1,R31
	LDI  R16,LOW(0)
	LDD  R17,Y+16
	CPI  R18,0
	BREQ PC+2
	RJMP _0x200004C
	LDD  R26,Y+13
	CPI  R26,LOW(0x8)
	BRSH PC+2
	RJMP _0x200004D
	LDD  R30,Y+9
	CPI  R30,0
	BREQ _0x2000052
	CPI  R30,LOW(0x3)
	BRNE _0x2000053
_0x2000052:
	RJMP _0x2000054
_0x2000053:
	CPI  R30,LOW(0x7)
	BRNE _0x2000055
_0x2000054:
	RJMP _0x2000056
_0x2000055:
	CPI  R30,LOW(0x8)
	BRNE _0x2000057
_0x2000056:
	RJMP _0x2000058
_0x2000057:
	CPI  R30,LOW(0x9)
	BRNE _0x2000059
_0x2000058:
	RJMP _0x200005A
_0x2000059:
	CPI  R30,LOW(0xA)
	BRNE _0x200005B
_0x200005A:
	ST   -Y,R17
	LDD  R26,Y+16
	RCALL _pcd8544_gotoxy
	RJMP _0x2000050
_0x200005B:
	CPI  R30,LOW(0x6)
	BRNE _0x2000050
	CALL SUBOPT_0x9
_0x2000050:
_0x200005D:
	PUSH R16
	SUBI R16,-1
	LDD  R30,Y+14
	POP  R26
	CP   R26,R30
	BRSH _0x200005F
	LDD  R26,Y+9
	CPI  R26,LOW(0x6)
	BRNE _0x2000060
	CALL SUBOPT_0xA
	ST   -Y,R31
	ST   -Y,R30
	CALL SUBOPT_0x6
	SBIW R30,1
	SUBI R30,LOW(-_gfx_buffer_G100)
	SBCI R31,HIGH(-_gfx_buffer_G100)
	LD   R26,Z
	CALL _glcd_writemem
	RJMP _0x2000061
_0x2000060:
	LDD  R30,Y+9
	CPI  R30,LOW(0x9)
	BRNE _0x2000065
	LDI  R20,LOW(0)
	RJMP _0x2000066
_0x2000065:
	CPI  R30,LOW(0xA)
	BRNE _0x2000064
	LDI  R20,LOW(255)
	RJMP _0x2000066
_0x2000064:
	CALL SUBOPT_0xA
	CALL SUBOPT_0xB
	MOV  R20,R30
	LDD  R30,Y+9
	CPI  R30,LOW(0x7)
	BREQ _0x200006D
	CPI  R30,LOW(0x8)
	BRNE _0x200006E
_0x200006D:
_0x2000066:
	CALL SUBOPT_0xC
	MOV  R20,R30
	RJMP _0x200006F
_0x200006E:
	CPI  R30,LOW(0x3)
	BRNE _0x2000071
	COM  R20
	RJMP _0x2000072
_0x2000071:
	CPI  R30,0
	BRNE _0x2000074
_0x2000072:
_0x200006F:
	MOV  R26,R20
	RCALL _pcd8544_wrdata_G100
	RJMP _0x200006B
_0x2000074:
	CALL SUBOPT_0xD
	LDI  R30,LOW(255)
	ST   -Y,R30
	LDD  R26,Y+13
	RCALL _pcd8544_wrmasked_G100
_0x200006B:
_0x2000061:
	RJMP _0x200005D
_0x200005F:
	LDD  R30,Y+15
	SUBI R30,-LOW(8)
	STD  Y+15,R30
	LDD  R30,Y+13
	SUBI R30,LOW(8)
	STD  Y+13,R30
	RJMP _0x2000075
_0x200004D:
	LDD  R20,Y+13
	LDI  R19,LOW(0)
	LDI  R30,LOW(0)
	STD  Y+13,R30
	RJMP _0x2000076
_0x200004C:
	MOV  R30,R18
	LDD  R26,Y+13
	ADD  R26,R30
	CPI  R26,LOW(0x9)
	BRSH _0x2000077
	LDD  R19,Y+13
	LDI  R30,LOW(0)
	STD  Y+13,R30
	RJMP _0x2000078
_0x2000077:
	LDI  R30,LOW(8)
	SUB  R30,R18
	MOV  R19,R30
_0x2000078:
	ST   -Y,R18
	MOV  R26,R19
	CALL _glcd_getmask
	MOV  R21,R30
	LDD  R30,Y+9
	CPI  R30,LOW(0x6)
	BRNE _0x200007C
	CALL SUBOPT_0x9
_0x200007D:
	PUSH R16
	SUBI R16,-1
	LDD  R30,Y+14
	POP  R26
	CP   R26,R30
	BRSH _0x200007F
	CALL SUBOPT_0x6
	SBIW R30,1
	SUBI R30,LOW(-_gfx_buffer_G100)
	SBCI R31,HIGH(-_gfx_buffer_G100)
	LD   R30,Z
	AND  R30,R21
	MOV  R26,R30
	MOV  R30,R18
	CALL __LSRB12
	CALL SUBOPT_0xE
	MOV  R30,R18
	MOV  R26,R21
	CALL __LSRB12
	COM  R30
	AND  R30,R1
	OR   R20,R30
	CALL SUBOPT_0xA
	ST   -Y,R31
	ST   -Y,R30
	MOV  R26,R20
	CALL _glcd_writemem
	RJMP _0x200007D
_0x200007F:
	RJMP _0x200007B
_0x200007C:
	CPI  R30,LOW(0x9)
	BRNE _0x2000080
	LDI  R20,LOW(0)
	RJMP _0x2000081
_0x2000080:
	CPI  R30,LOW(0xA)
	BRNE _0x2000087
	LDI  R20,LOW(255)
_0x2000081:
	CALL SUBOPT_0xC
	MOV  R26,R30
	MOV  R30,R18
	CALL __LSLB12
	MOV  R20,R30
_0x2000084:
	PUSH R16
	SUBI R16,-1
	LDD  R30,Y+14
	POP  R26
	CP   R26,R30
	BRSH _0x2000086
	CALL SUBOPT_0xD
	ST   -Y,R21
	LDI  R26,LOW(0)
	RCALL _pcd8544_wrmasked_G100
	RJMP _0x2000084
_0x2000086:
	RJMP _0x200007B
_0x2000087:
_0x2000088:
	PUSH R16
	SUBI R16,-1
	LDD  R30,Y+14
	POP  R26
	CP   R26,R30
	BRSH _0x200008A
	CALL SUBOPT_0xF
	MOV  R26,R30
	MOV  R30,R18
	CALL __LSLB12
	ST   -Y,R30
	ST   -Y,R21
	LDD  R26,Y+13
	RCALL _pcd8544_wrmasked_G100
	RJMP _0x2000088
_0x200008A:
_0x200007B:
	LDD  R30,Y+13
	CPI  R30,0
	BRNE _0x200008B
	RJMP _0x200004B
_0x200008B:
	LDD  R26,Y+13
	CPI  R26,LOW(0x8)
	BRSH _0x200008C
	LDD  R30,Y+13
	SUB  R30,R19
	MOV  R20,R30
	LDI  R30,LOW(0)
	RJMP _0x20000A1
_0x200008C:
	MOV  R20,R18
	LDD  R30,Y+13
	SUBI R30,LOW(8)
_0x20000A1:
	STD  Y+13,R30
	LDI  R16,LOW(0)
	LDD  R30,Y+15
	SUBI R30,-LOW(8)
	STD  Y+15,R30
	LDI  R30,LOW(8)
	SUB  R30,R18
	MOV  R19,R30
	LDD  R17,Y+16
	LDD  R30,Y+10
	LDD  R31,Y+10+1
	STD  Y+6,R30
	STD  Y+6+1,R31
_0x2000076:
	MOV  R30,R20
	LDI  R31,0
	SUBI R30,LOW(-__glcd_mask*2)
	SBCI R31,HIGH(-__glcd_mask*2)
	LPM  R21,Z
	LDD  R30,Y+9
	CPI  R30,LOW(0x6)
	BRNE _0x2000091
	CALL SUBOPT_0x9
_0x2000092:
	PUSH R16
	SUBI R16,-1
	LDD  R30,Y+14
	POP  R26
	CP   R26,R30
	BRSH _0x2000094
	CALL SUBOPT_0x6
	SBIW R30,1
	SUBI R30,LOW(-_gfx_buffer_G100)
	SBCI R31,HIGH(-_gfx_buffer_G100)
	LD   R30,Z
	AND  R30,R21
	MOV  R26,R30
	MOV  R30,R19
	CALL __LSLB12
	CALL SUBOPT_0xE
	MOV  R30,R19
	MOV  R26,R21
	CALL __LSLB12
	COM  R30
	AND  R30,R1
	OR   R20,R30
	CALL SUBOPT_0xA
	ST   -Y,R31
	ST   -Y,R30
	MOV  R26,R20
	CALL _glcd_writemem
	RJMP _0x2000092
_0x2000094:
	RJMP _0x2000090
_0x2000091:
	CPI  R30,LOW(0x9)
	BRNE _0x2000095
	LDI  R20,LOW(0)
	RJMP _0x2000096
_0x2000095:
	CPI  R30,LOW(0xA)
	BRNE _0x200009C
	LDI  R20,LOW(255)
_0x2000096:
	CALL SUBOPT_0xC
	MOV  R26,R30
	MOV  R30,R19
	CALL __LSRB12
	MOV  R20,R30
_0x2000099:
	PUSH R16
	SUBI R16,-1
	LDD  R30,Y+14
	POP  R26
	CP   R26,R30
	BRSH _0x200009B
	CALL SUBOPT_0xD
	ST   -Y,R21
	LDI  R26,LOW(0)
	RCALL _pcd8544_wrmasked_G100
	RJMP _0x2000099
_0x200009B:
	RJMP _0x2000090
_0x200009C:
_0x200009D:
	PUSH R16
	SUBI R16,-1
	LDD  R30,Y+14
	POP  R26
	CP   R26,R30
	BRSH _0x200009F
	CALL SUBOPT_0xF
	MOV  R26,R30
	MOV  R30,R19
	CALL __LSRB12
	ST   -Y,R30
	ST   -Y,R21
	LDD  R26,Y+13
	RCALL _pcd8544_wrmasked_G100
	RJMP _0x200009D
_0x200009F:
_0x2000090:
_0x2000075:
	LDD  R30,Y+8
	LDD  R26,Y+10
	LDD  R27,Y+10+1
	LDI  R31,0
	ADD  R30,R26
	ADC  R31,R27
	STD  Y+10,R30
	STD  Y+10+1,R31
	RJMP _0x2000049
_0x200004B:
_0x2120007:
	CALL __LOADLOCR6
	ADIW R28,17
	RET
; .FEND

	.CSEG
_glcd_clipx:
; .FSTART _glcd_clipx
	CALL SUBOPT_0x10
	BRLT _0x2020003
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	JMP  _0x2120002
_0x2020003:
	LD   R26,Y
	LDD  R27,Y+1
	CPI  R26,LOW(0x54)
	LDI  R30,HIGH(0x54)
	CPC  R27,R30
	BRLT _0x2020004
	LDI  R30,LOW(83)
	LDI  R31,HIGH(83)
	JMP  _0x2120002
_0x2020004:
	LD   R30,Y
	LDD  R31,Y+1
	JMP  _0x2120002
; .FEND
_glcd_clipy:
; .FSTART _glcd_clipy
	CALL SUBOPT_0x10
	BRLT _0x2020005
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	JMP  _0x2120002
_0x2020005:
	LD   R26,Y
	LDD  R27,Y+1
	SBIW R26,48
	BRLT _0x2020006
	LDI  R30,LOW(47)
	LDI  R31,HIGH(47)
	JMP  _0x2120002
_0x2020006:
	LD   R30,Y
	LDD  R31,Y+1
	JMP  _0x2120002
; .FEND
_glcd_imagesize:
; .FSTART _glcd_imagesize
	ST   -Y,R26
	ST   -Y,R16
	LDD  R26,Y+2
	CPI  R26,LOW(0x54)
	BRSH _0x2020008
	LDD  R26,Y+1
	CPI  R26,LOW(0x30)
	BRLO _0x2020007
_0x2020008:
	__GETD1N 0x0
	LDD  R16,Y+0
	JMP  _0x2120001
_0x2020007:
	LDD  R30,Y+1
	ANDI R30,LOW(0x7)
	MOV  R16,R30
	LDD  R30,Y+1
	LSR  R30
	LSR  R30
	LSR  R30
	STD  Y+1,R30
	CPI  R16,0
	BREQ _0x202000A
	SUBI R30,-LOW(1)
	STD  Y+1,R30
_0x202000A:
	LDD  R26,Y+2
	CLR  R27
	CLR  R24
	CLR  R25
	LDD  R30,Y+1
	CLR  R31
	CLR  R22
	CLR  R23
	CALL __MULD12U
	__ADDD1N 4
	LDD  R16,Y+0
	JMP  _0x2120001
; .FEND
_glcd_putimagef:
; .FSTART _glcd_putimagef
	ST   -Y,R26
	CALL __SAVELOCR4
	LDD  R26,Y+4
	CPI  R26,LOW(0x5)
	BRSH _0x2020038
	LDD  R30,Y+5
	LDD  R31,Y+5+1
	LPM  R16,Z+
	CALL SUBOPT_0x11
	LPM  R17,Z+
	CALL SUBOPT_0x11
	LPM  R18,Z+
	CALL SUBOPT_0x11
	LPM  R19,Z+
	STD  Y+5,R30
	STD  Y+5+1,R31
	LDD  R30,Y+8
	ST   -Y,R30
	LDD  R30,Y+8
	ST   -Y,R30
	ST   -Y,R16
	ST   -Y,R18
	LDI  R30,LOW(1)
	ST   -Y,R30
	LDD  R30,Y+10
	LDD  R31,Y+10+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+11
	RCALL _glcd_block
	ST   -Y,R16
	MOV  R26,R18
	RCALL _glcd_imagesize
	RJMP _0x2120006
_0x2020038:
	__GETD1N 0x0
_0x2120006:
	CALL __LOADLOCR4
	ADIW R28,9
	RET
; .FEND
_glcd_moveto:
; .FSTART _glcd_moveto
	ST   -Y,R26
	LDD  R26,Y+1
	CLR  R27
	RCALL _glcd_clipx
	__PUTB1MN _glcd_state,2
	LD   R26,Y
	CLR  R27
	RCALL _glcd_clipy
	__PUTB1MN _glcd_state,3
	JMP  _0x2120002
; .FEND
	#ifndef __SLEEP_DEFINED__
	#define __SLEEP_DEFINED__
	.EQU __se_bit=0x01
	.EQU __sm_mask=0x0E
	.EQU __sm_adc_noise_red=0x02
	.EQU __sm_powerdown=0x04
	.EQU __sm_powersave=0x06
	.EQU __sm_standby=0x0C
	.EQU __sm_ext_standby=0x0E
	.SET power_ctrl_reg=smcr
	#endif

	.CSEG
_putchar:
; .FSTART _putchar
	ST   -Y,R26
_0x2060006:
	LDS  R30,192
	ANDI R30,LOW(0x20)
	BREQ _0x2060006
_0x2120005:
	LD   R30,Y
	STS  198,R30
_0x2120004:
	ADIW R28,1
	RET
; .FEND
_put_usart_G103:
; .FSTART _put_usart_G103
	ST   -Y,R27
	ST   -Y,R26
	LDD  R26,Y+2
	RCALL _putchar
	LD   R26,Y
	LDD  R27,Y+1
	CALL SUBOPT_0x4
	JMP  _0x2120001
; .FEND
__print_G103:
; .FSTART __print_G103
	ST   -Y,R27
	ST   -Y,R26
	SBIW R28,6
	CALL __SAVELOCR6
	LDI  R16,0
	LDD  R26,Y+12
	LDD  R27,Y+12+1
	LDI  R30,LOW(0)
	LDI  R31,HIGH(0)
	ST   X+,R30
	ST   X,R31
_0x206001C:
	LDD  R30,Y+18
	LDD  R31,Y+18+1
	ADIW R30,1
	STD  Y+18,R30
	STD  Y+18+1,R31
	SBIW R30,1
	LPM  R30,Z
	MOV  R19,R30
	CPI  R30,0
	BRNE PC+2
	RJMP _0x206001E
	MOV  R30,R16
	CPI  R30,0
	BRNE _0x2060022
	CPI  R19,37
	BRNE _0x2060023
	LDI  R16,LOW(1)
	RJMP _0x2060024
_0x2060023:
	CALL SUBOPT_0x12
_0x2060024:
	RJMP _0x2060021
_0x2060022:
	CPI  R30,LOW(0x1)
	BRNE _0x2060025
	CPI  R19,37
	BRNE _0x2060026
	CALL SUBOPT_0x12
	RJMP _0x20600D2
_0x2060026:
	LDI  R16,LOW(2)
	LDI  R21,LOW(0)
	LDI  R17,LOW(0)
	CPI  R19,45
	BRNE _0x2060027
	LDI  R17,LOW(1)
	RJMP _0x2060021
_0x2060027:
	CPI  R19,43
	BRNE _0x2060028
	LDI  R21,LOW(43)
	RJMP _0x2060021
_0x2060028:
	CPI  R19,32
	BRNE _0x2060029
	LDI  R21,LOW(32)
	RJMP _0x2060021
_0x2060029:
	RJMP _0x206002A
_0x2060025:
	CPI  R30,LOW(0x2)
	BRNE _0x206002B
_0x206002A:
	LDI  R20,LOW(0)
	LDI  R16,LOW(3)
	CPI  R19,48
	BRNE _0x206002C
	ORI  R17,LOW(128)
	RJMP _0x2060021
_0x206002C:
	RJMP _0x206002D
_0x206002B:
	CPI  R30,LOW(0x3)
	BREQ PC+2
	RJMP _0x2060021
_0x206002D:
	CPI  R19,48
	BRLO _0x2060030
	CPI  R19,58
	BRLO _0x2060031
_0x2060030:
	RJMP _0x206002F
_0x2060031:
	LDI  R26,LOW(10)
	MUL  R20,R26
	MOV  R20,R0
	MOV  R30,R19
	SUBI R30,LOW(48)
	ADD  R20,R30
	RJMP _0x2060021
_0x206002F:
	MOV  R30,R19
	CPI  R30,LOW(0x63)
	BRNE _0x2060035
	CALL SUBOPT_0x13
	LDD  R30,Y+16
	LDD  R31,Y+16+1
	LDD  R26,Z+4
	ST   -Y,R26
	CALL SUBOPT_0x14
	RJMP _0x2060036
_0x2060035:
	CPI  R30,LOW(0x73)
	BRNE _0x2060038
	CALL SUBOPT_0x13
	CALL SUBOPT_0x15
	CALL _strlen
	MOV  R16,R30
	RJMP _0x2060039
_0x2060038:
	CPI  R30,LOW(0x70)
	BRNE _0x206003B
	CALL SUBOPT_0x13
	CALL SUBOPT_0x15
	CALL _strlenf
	MOV  R16,R30
	ORI  R17,LOW(8)
_0x2060039:
	ORI  R17,LOW(2)
	ANDI R17,LOW(127)
	LDI  R18,LOW(0)
	RJMP _0x206003C
_0x206003B:
	CPI  R30,LOW(0x64)
	BREQ _0x206003F
	CPI  R30,LOW(0x69)
	BRNE _0x2060040
_0x206003F:
	ORI  R17,LOW(4)
	RJMP _0x2060041
_0x2060040:
	CPI  R30,LOW(0x75)
	BRNE _0x2060042
_0x2060041:
	LDI  R30,LOW(_tbl10_G103*2)
	LDI  R31,HIGH(_tbl10_G103*2)
	STD  Y+6,R30
	STD  Y+6+1,R31
	LDI  R16,LOW(5)
	RJMP _0x2060043
_0x2060042:
	CPI  R30,LOW(0x58)
	BRNE _0x2060045
	ORI  R17,LOW(8)
	RJMP _0x2060046
_0x2060045:
	CPI  R30,LOW(0x78)
	BREQ PC+2
	RJMP _0x2060077
_0x2060046:
	LDI  R30,LOW(_tbl16_G103*2)
	LDI  R31,HIGH(_tbl16_G103*2)
	STD  Y+6,R30
	STD  Y+6+1,R31
	LDI  R16,LOW(4)
_0x2060043:
	SBRS R17,2
	RJMP _0x2060048
	CALL SUBOPT_0x13
	CALL SUBOPT_0x16
	LDD  R26,Y+11
	TST  R26
	BRPL _0x2060049
	LDD  R30,Y+10
	LDD  R31,Y+10+1
	CALL __ANEGW1
	STD  Y+10,R30
	STD  Y+10+1,R31
	LDI  R21,LOW(45)
_0x2060049:
	CPI  R21,0
	BREQ _0x206004A
	SUBI R16,-LOW(1)
	RJMP _0x206004B
_0x206004A:
	ANDI R17,LOW(251)
_0x206004B:
	RJMP _0x206004C
_0x2060048:
	CALL SUBOPT_0x13
	CALL SUBOPT_0x16
_0x206004C:
_0x206003C:
	SBRC R17,0
	RJMP _0x206004D
_0x206004E:
	CP   R16,R20
	BRSH _0x2060050
	SBRS R17,7
	RJMP _0x2060051
	SBRS R17,2
	RJMP _0x2060052
	ANDI R17,LOW(251)
	MOV  R19,R21
	SUBI R16,LOW(1)
	RJMP _0x2060053
_0x2060052:
	LDI  R19,LOW(48)
_0x2060053:
	RJMP _0x2060054
_0x2060051:
	LDI  R19,LOW(32)
_0x2060054:
	CALL SUBOPT_0x12
	SUBI R20,LOW(1)
	RJMP _0x206004E
_0x2060050:
_0x206004D:
	MOV  R18,R16
	SBRS R17,1
	RJMP _0x2060055
_0x2060056:
	CPI  R18,0
	BREQ _0x2060058
	SBRS R17,3
	RJMP _0x2060059
	LDD  R30,Y+6
	LDD  R31,Y+6+1
	LPM  R19,Z+
	STD  Y+6,R30
	STD  Y+6+1,R31
	RJMP _0x206005A
_0x2060059:
	LDD  R26,Y+6
	LDD  R27,Y+6+1
	LD   R19,X+
	STD  Y+6,R26
	STD  Y+6+1,R27
_0x206005A:
	CALL SUBOPT_0x12
	CPI  R20,0
	BREQ _0x206005B
	SUBI R20,LOW(1)
_0x206005B:
	SUBI R18,LOW(1)
	RJMP _0x2060056
_0x2060058:
	RJMP _0x206005C
_0x2060055:
_0x206005E:
	LDI  R19,LOW(48)
	LDD  R30,Y+6
	LDD  R31,Y+6+1
	CALL __GETW1PF
	STD  Y+8,R30
	STD  Y+8+1,R31
	LDD  R30,Y+6
	LDD  R31,Y+6+1
	ADIW R30,2
	STD  Y+6,R30
	STD  Y+6+1,R31
_0x2060060:
	LDD  R30,Y+8
	LDD  R31,Y+8+1
	LDD  R26,Y+10
	LDD  R27,Y+10+1
	CP   R26,R30
	CPC  R27,R31
	BRLO _0x2060062
	SUBI R19,-LOW(1)
	LDD  R26,Y+8
	LDD  R27,Y+8+1
	LDD  R30,Y+10
	LDD  R31,Y+10+1
	SUB  R30,R26
	SBC  R31,R27
	STD  Y+10,R30
	STD  Y+10+1,R31
	RJMP _0x2060060
_0x2060062:
	CPI  R19,58
	BRLO _0x2060063
	SBRS R17,3
	RJMP _0x2060064
	SUBI R19,-LOW(7)
	RJMP _0x2060065
_0x2060064:
	SUBI R19,-LOW(39)
_0x2060065:
_0x2060063:
	SBRC R17,4
	RJMP _0x2060067
	CPI  R19,49
	BRSH _0x2060069
	LDD  R26,Y+8
	LDD  R27,Y+8+1
	SBIW R26,1
	BRNE _0x2060068
_0x2060069:
	RJMP _0x20600D3
_0x2060068:
	CP   R20,R18
	BRLO _0x206006D
	SBRS R17,0
	RJMP _0x206006E
_0x206006D:
	RJMP _0x206006C
_0x206006E:
	LDI  R19,LOW(32)
	SBRS R17,7
	RJMP _0x206006F
	LDI  R19,LOW(48)
_0x20600D3:
	ORI  R17,LOW(16)
	SBRS R17,2
	RJMP _0x2060070
	ANDI R17,LOW(251)
	ST   -Y,R21
	CALL SUBOPT_0x14
	CPI  R20,0
	BREQ _0x2060071
	SUBI R20,LOW(1)
_0x2060071:
_0x2060070:
_0x206006F:
_0x2060067:
	CALL SUBOPT_0x12
	CPI  R20,0
	BREQ _0x2060072
	SUBI R20,LOW(1)
_0x2060072:
_0x206006C:
	SUBI R18,LOW(1)
	LDD  R26,Y+8
	LDD  R27,Y+8+1
	SBIW R26,2
	BRLO _0x206005F
	RJMP _0x206005E
_0x206005F:
_0x206005C:
	SBRS R17,0
	RJMP _0x2060073
_0x2060074:
	CPI  R20,0
	BREQ _0x2060076
	SUBI R20,LOW(1)
	LDI  R30,LOW(32)
	ST   -Y,R30
	CALL SUBOPT_0x14
	RJMP _0x2060074
_0x2060076:
_0x2060073:
_0x2060077:
_0x2060036:
_0x20600D2:
	LDI  R16,LOW(0)
_0x2060021:
	RJMP _0x206001C
_0x206001E:
	LDD  R26,Y+12
	LDD  R27,Y+12+1
	CALL __GETW1P
	CALL __LOADLOCR6
	ADIW R28,20
	RET
; .FEND
_printf:
; .FSTART _printf
	PUSH R15
	MOV  R15,R24
	SBIW R28,6
	ST   -Y,R17
	ST   -Y,R16
	MOVW R26,R28
	ADIW R26,4
	CALL __ADDW2R15
	MOVW R16,R26
	LDI  R30,LOW(0)
	STD  Y+4,R30
	STD  Y+4+1,R30
	STD  Y+6,R30
	STD  Y+6+1,R30
	MOVW R26,R28
	ADIW R26,8
	CALL __ADDW2R15
	CALL __GETW1P
	ST   -Y,R31
	ST   -Y,R30
	ST   -Y,R17
	ST   -Y,R16
	LDI  R30,LOW(_put_usart_G103)
	LDI  R31,HIGH(_put_usart_G103)
	ST   -Y,R31
	ST   -Y,R30
	MOVW R26,R28
	ADIW R26,8
	RCALL __print_G103
	LDD  R17,Y+1
	LDD  R16,Y+0
	ADIW R28,8
	POP  R15
	RET
; .FEND

	.CSEG
_memset:
; .FSTART _memset
	ST   -Y,R27
	ST   -Y,R26
    ldd  r27,y+1
    ld   r26,y
    adiw r26,0
    breq memset1
    ldd  r31,y+4
    ldd  r30,y+3
    ldd  r22,y+2
memset0:
    st   z+,r22
    sbiw r26,1
    brne memset0
memset1:
    ldd  r30,y+3
    ldd  r31,y+4
_0x2120003:
	ADIW R28,5
	RET
; .FEND
_strlen:
; .FSTART _strlen
	ST   -Y,R27
	ST   -Y,R26
    ld   r26,y+
    ld   r27,y+
    clr  r30
    clr  r31
strlen0:
    ld   r22,x+
    tst  r22
    breq strlen1
    adiw r30,1
    rjmp strlen0
strlen1:
    ret
; .FEND
_strlenf:
; .FSTART _strlenf
	ST   -Y,R27
	ST   -Y,R26
    clr  r26
    clr  r27
    ld   r30,y+
    ld   r31,y+
strlenf0:
	lpm  r0,z+
    tst  r0
    breq strlenf1
    adiw r26,1
    rjmp strlenf0
strlenf1:
    movw r30,r26
    ret
; .FEND

	.CSEG
_glcd_getmask:
; .FSTART _glcd_getmask
	ST   -Y,R26
	LD   R30,Y
	LDI  R31,0
	SUBI R30,LOW(-__glcd_mask*2)
	SBCI R31,HIGH(-__glcd_mask*2)
	LPM  R26,Z
	LDD  R30,Y+1
	CALL __LSLB12
_0x2120002:
	ADIW R28,2
	RET
; .FEND
_glcd_mappixcolor1bit:
; .FSTART _glcd_mappixcolor1bit
	ST   -Y,R26
	ST   -Y,R16
	LDD  R30,Y+1
	CPI  R30,LOW(0x7)
	BREQ _0x20A0007
	CPI  R30,LOW(0xA)
	BRNE _0x20A0008
_0x20A0007:
	LDS  R16,_glcd_state
	RJMP _0x20A0009
_0x20A0008:
	CPI  R30,LOW(0x9)
	BRNE _0x20A000B
	__GETBRMN 16,_glcd_state,1
	RJMP _0x20A0009
_0x20A000B:
	CPI  R30,LOW(0x8)
	BRNE _0x20A0005
	__GETBRMN 16,_glcd_state,16
_0x20A0009:
	__GETB1MN _glcd_state,1
	CPI  R30,0
	BREQ _0x20A000E
	CPI  R16,0
	BREQ _0x20A000F
	LDI  R30,LOW(255)
	LDD  R16,Y+0
	RJMP _0x2120001
_0x20A000F:
	LDD  R30,Y+2
	COM  R30
	LDD  R16,Y+0
	RJMP _0x2120001
_0x20A000E:
	CPI  R16,0
	BRNE _0x20A0011
	LDI  R30,LOW(0)
	LDD  R16,Y+0
	RJMP _0x2120001
_0x20A0011:
_0x20A0005:
	LDD  R30,Y+2
	LDD  R16,Y+0
	RJMP _0x2120001
; .FEND
_glcd_readmem:
; .FSTART _glcd_readmem
	ST   -Y,R27
	ST   -Y,R26
	LDD  R30,Y+2
	CPI  R30,LOW(0x1)
	BRNE _0x20A0015
	LD   R30,Y
	LDD  R31,Y+1
	LPM  R30,Z
	RJMP _0x2120001
_0x20A0015:
	CPI  R30,LOW(0x2)
	BRNE _0x20A0016
	LD   R26,Y
	LDD  R27,Y+1
	CALL __EEPROMRDB
	RJMP _0x2120001
_0x20A0016:
	CPI  R30,LOW(0x3)
	BRNE _0x20A0018
	LD   R26,Y
	LDD  R27,Y+1
	__CALL1MN _glcd_state,25
	RJMP _0x2120001
_0x20A0018:
	LD   R26,Y
	LDD  R27,Y+1
	LD   R30,X
_0x2120001:
	ADIW R28,3
	RET
; .FEND
_glcd_writemem:
; .FSTART _glcd_writemem
	ST   -Y,R26
	LDD  R30,Y+3
	CPI  R30,0
	BRNE _0x20A001C
	LD   R30,Y
	LDD  R26,Y+1
	LDD  R27,Y+1+1
	ST   X,R30
	RJMP _0x20A001B
_0x20A001C:
	CPI  R30,LOW(0x2)
	BRNE _0x20A001D
	LD   R30,Y
	LDD  R26,Y+1
	LDD  R27,Y+1+1
	CALL __EEPROMWRB
	RJMP _0x20A001B
_0x20A001D:
	CPI  R30,LOW(0x3)
	BRNE _0x20A001B
	LDD  R30,Y+1
	LDD  R31,Y+1+1
	ST   -Y,R31
	ST   -Y,R30
	LDD  R26,Y+2
	__CALL1MN _glcd_state,27
_0x20A001B:
	ADIW R28,4
	RET
; .FEND

	.CSEG

	.CSEG

	.CSEG

	.DSEG

	.CSEG

	.DSEG
_glcd_state:
	.BYTE 0x1D
_cursor:
	.BYTE 0x1
_voltDigitalX:
	.BYTE 0x2
_voltDigitalY:
	.BYTE 0x2
_dis1:
	.BYTE 0x2
_dis2:
	.BYTE 0x2
_dis3:
	.BYTE 0x2
_dis4:
	.BYTE 0x2
_i:
	.BYTE 0x2
_juego1:
	.BYTE 0x2
_play:
	.BYTE 0x2
_vidas:
	.BYTE 0x2
_dato:
	.BYTE 0x1
_gfx_addr_G100:
	.BYTE 0x2
_gfx_buffer_G100:
	.BYTE 0x1F8
__seed_G108:
	.BYTE 0x4

	.CSEG
;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:7 WORDS
SUBOPT_0x0:
	LDI  R30,LOW(0)
	ST   -Y,R30
	ST   -Y,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x1:
	LDI  R30,LOW(_imagen11*2)
	LDI  R31,HIGH(_imagen11*2)
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(0)
	JMP  _glcd_putimagef

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
SUBOPT_0x2:
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(0)
	CALL _glcd_putimagef
	LDI  R26,LOW(5000)
	LDI  R27,HIGH(5000)
	JMP  _delay_ms

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0x3:
	ST   -Y,R31
	ST   -Y,R30
	LDI  R24,0
	CALL _printf
	ADIW R28,2
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 6 TIMES, CODE SIZE REDUCTION:12 WORDS
SUBOPT_0x4:
	LD   R30,X+
	LD   R31,X+
	ADIW R30,1
	ST   -X,R31
	ST   -X,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x5:
	LDI  R26,LOW(3000)
	LDI  R27,HIGH(3000)
	JMP  _delay_ms

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x6:
	LDI  R26,LOW(_gfx_addr_G100)
	LDI  R27,HIGH(_gfx_addr_G100)
	RJMP SUBOPT_0x4

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x7:
	ADD  R30,R26
	ADC  R31,R27
	STD  Y+6,R30
	STD  Y+6+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:8 WORDS
SUBOPT_0x8:
	LDD  R30,Y+12
	ST   -Y,R30
	LDD  R30,Y+7
	LDD  R31,Y+7+1
	ADIW R30,1
	STD  Y+7,R30
	STD  Y+7+1,R31
	SBIW R30,1
	ST   -Y,R31
	ST   -Y,R30
	LDI  R26,LOW(0)
	JMP  _glcd_writemem

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x9:
	ST   -Y,R17
	LDD  R26,Y+16
	JMP  _pcd8544_setaddr_G100

;OPTIMIZER ADDED SUBROUTINE, CALLED 4 TIMES, CODE SIZE REDUCTION:15 WORDS
SUBOPT_0xA:
	LDD  R30,Y+12
	ST   -Y,R30
	LDD  R30,Y+7
	LDD  R31,Y+7+1
	ADIW R30,1
	STD  Y+7,R30
	STD  Y+7+1,R31
	SBIW R30,1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0xB:
	CLR  R22
	CLR  R23
	MOVW R26,R30
	MOVW R24,R22
	JMP  _glcd_readmem

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0xC:
	ST   -Y,R20
	LDD  R26,Y+10
	JMP  _glcd_mappixcolor1bit

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0xD:
	ST   -Y,R17
	INC  R17
	LDD  R30,Y+16
	ST   -Y,R30
	ST   -Y,R20
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:5 WORDS
SUBOPT_0xE:
	MOV  R20,R30
	LDD  R30,Y+12
	ST   -Y,R30
	LDD  R26,Y+7
	LDD  R27,Y+7+1
	CLR  R24
	CLR  R25
	CALL _glcd_readmem
	MOV  R1,R30
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0xF:
	ST   -Y,R17
	INC  R17
	LDD  R30,Y+16
	ST   -Y,R30
	LDD  R30,Y+14
	ST   -Y,R30
	LDD  R30,Y+9
	LDD  R31,Y+9+1
	ADIW R30,1
	STD  Y+9,R30
	STD  Y+9+1,R31
	SBIW R30,1
	RJMP SUBOPT_0xB

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x10:
	ST   -Y,R27
	ST   -Y,R26
	LD   R26,Y
	LDD  R27,Y+1
	CALL __CPW02
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:1 WORDS
SUBOPT_0x11:
	STD  Y+5,R30
	STD  Y+5+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:13 WORDS
SUBOPT_0x12:
	ST   -Y,R19
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	LDD  R30,Y+15
	LDD  R31,Y+15+1
	ICALL
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 5 TIMES, CODE SIZE REDUCTION:9 WORDS
SUBOPT_0x13:
	LDD  R30,Y+16
	LDD  R31,Y+16+1
	SBIW R30,4
	STD  Y+16,R30
	STD  Y+16+1,R31
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:3 WORDS
SUBOPT_0x14:
	LDD  R26,Y+13
	LDD  R27,Y+13+1
	LDD  R30,Y+15
	LDD  R31,Y+15+1
	ICALL
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:4 WORDS
SUBOPT_0x15:
	LDD  R26,Y+16
	LDD  R27,Y+16+1
	ADIW R26,4
	CALL __GETW1P
	STD  Y+6,R30
	STD  Y+6+1,R31
	LDD  R26,Y+6
	LDD  R27,Y+6+1
	RET

;OPTIMIZER ADDED SUBROUTINE, CALLED 2 TIMES, CODE SIZE REDUCTION:2 WORDS
SUBOPT_0x16:
	LDD  R26,Y+16
	LDD  R27,Y+16+1
	ADIW R26,4
	CALL __GETW1P
	STD  Y+10,R30
	STD  Y+10+1,R31
	RET


	.CSEG
_delay_ms:
	adiw r26,0
	breq __delay_ms1
__delay_ms0:
	__DELAY_USW 0xFA
	wdr
	sbiw r26,1
	brne __delay_ms0
__delay_ms1:
	ret

__ADDW2R15:
	CLR  R0
	ADD  R26,R15
	ADC  R27,R0
	RET

__ANEGW1:
	NEG  R31
	NEG  R30
	SBCI R31,0
	RET

__LSLB12:
	TST  R30
	MOV  R0,R30
	MOV  R30,R26
	BREQ __LSLB12R
__LSLB12L:
	LSL  R30
	DEC  R0
	BRNE __LSLB12L
__LSLB12R:
	RET

__LSRB12:
	TST  R30
	MOV  R0,R30
	MOV  R30,R26
	BREQ __LSRB12R
__LSRB12L:
	LSR  R30
	DEC  R0
	BRNE __LSRB12L
__LSRB12R:
	RET

__MULW12U:
	MUL  R31,R26
	MOV  R31,R0
	MUL  R30,R27
	ADD  R31,R0
	MUL  R30,R26
	MOV  R30,R0
	ADD  R31,R1
	RET

__MULD12U:
	MUL  R23,R26
	MOV  R23,R0
	MUL  R22,R27
	ADD  R23,R0
	MUL  R31,R24
	ADD  R23,R0
	MUL  R30,R25
	ADD  R23,R0
	MUL  R22,R26
	MOV  R22,R0
	ADD  R23,R1
	MUL  R31,R27
	ADD  R22,R0
	ADC  R23,R1
	MUL  R30,R24
	ADD  R22,R0
	ADC  R23,R1
	CLR  R24
	MUL  R31,R26
	MOV  R31,R0
	ADD  R22,R1
	ADC  R23,R24
	MUL  R30,R27
	ADD  R31,R0
	ADC  R22,R1
	ADC  R23,R24
	MUL  R30,R26
	MOV  R30,R0
	ADD  R31,R1
	ADC  R22,R24
	ADC  R23,R24
	RET

__GETW1P:
	LD   R30,X+
	LD   R31,X
	SBIW R26,1
	RET

__GETW1PF:
	LPM  R0,Z+
	LPM  R31,Z
	MOV  R30,R0
	RET

__EEPROMRDB:
	SBIC EECR,EEWE
	RJMP __EEPROMRDB
	PUSH R31
	IN   R31,SREG
	CLI
	OUT  EEARL,R26
	OUT  EEARH,R27
	SBI  EECR,EERE
	IN   R30,EEDR
	OUT  SREG,R31
	POP  R31
	RET

__EEPROMWRB:
	SBIS EECR,EEWE
	RJMP __EEPROMWRB1
	WDR
	RJMP __EEPROMWRB
__EEPROMWRB1:
	IN   R25,SREG
	CLI
	OUT  EEARL,R26
	OUT  EEARH,R27
	SBI  EECR,EERE
	IN   R24,EEDR
	CP   R30,R24
	BREQ __EEPROMWRB0
	OUT  EEDR,R30
	SBI  EECR,EEMWE
	SBI  EECR,EEWE
__EEPROMWRB0:
	OUT  SREG,R25
	RET

__CPW02:
	CLR  R0
	CP   R0,R26
	CPC  R0,R27
	RET

__SAVELOCR6:
	ST   -Y,R21
__SAVELOCR5:
	ST   -Y,R20
__SAVELOCR4:
	ST   -Y,R19
__SAVELOCR3:
	ST   -Y,R18
__SAVELOCR2:
	ST   -Y,R17
	ST   -Y,R16
	RET

__LOADLOCR6:
	LDD  R21,Y+5
__LOADLOCR5:
	LDD  R20,Y+4
__LOADLOCR4:
	LDD  R19,Y+3
__LOADLOCR3:
	LDD  R18,Y+2
__LOADLOCR2:
	LDD  R17,Y+1
	LD   R16,Y
	RET

;END OF CODE MARKER
__END_OF_CODE:
